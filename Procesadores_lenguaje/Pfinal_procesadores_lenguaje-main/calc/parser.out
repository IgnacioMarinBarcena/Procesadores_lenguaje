Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement SALTO_LINEA statements
Rule 2     statements -> statement
Rule 3     statement -> <empty>
Rule 4     statement -> asignacion
Rule 5     statement -> declaracion
Rule 6     statement -> vectores
Rule 7     statement -> registros
Rule 8     statement -> def_funcion
Rule 9     statement -> uso_funcion
Rule 10    statement -> condicionales
Rule 11    statement -> bucles
Rule 12    statement -> logico
Rule 13    declaracion -> tipo names
Rule 14    declaracion -> VECTOR tipo NAME [ NUMBER ]
Rule 15    declaracion -> REGISTRO NAME { atributos }
Rule 16    asignacion -> tipo NAME Igualdad logico
Rule 17    asignacion -> NAME Igualdad logico
Rule 18    names -> NAME , names
Rule 19    names -> NAME
Rule 20    tipo -> BOOLEANO
Rule 21    tipo -> ENTERO
Rule 22    tipo -> REAL
Rule 23    tipo -> CARACTER
Rule 24    tipo -> REGISTRO
Rule 25    tipo -> VECTOR
Rule 26    tipo -> NAME
Rule 27    vectores -> NAME [ NUMBER ] Igualdad logico
Rule 28    registros -> NAME . NAME Igualdad logico
Rule 29    registros -> NAME NAME
Rule 30    atributos -> tipo campos ; atributos
Rule 31    atributos -> tipo campos ;
Rule 32    campos -> NAME , campos
Rule 33    campos -> NAME
Rule 34    def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
Rule 35    uso_funcion -> NAME ( argumentos )
Rule 36    list_args -> tipo NAME , list_args
Rule 37    list_args -> tipo NAME
Rule 38    list_args -> empty
Rule 39    blq_sentencia -> statement SALTO_LINEA blq_sentencia
Rule 40    blq_sentencia -> statement
Rule 41    argumentos -> argumentos , operando
Rule 42    argumentos -> operando
Rule 43    argumentos -> empty
Rule 44    condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI
Rule 45    condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
Rule 46    bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS
Rule 47    empty -> <empty>
Rule 48    restriccion -> restriccion comparador expression
Rule 49    restriccion -> expression
Rule 50    logico -> logico condicion restriccion
Rule 51    logico -> restriccion
Rule 52    comparador -> IgualIgual
Rule 53    comparador -> MenorIgual
Rule 54    comparador -> MayorIgual
Rule 55    comparador -> Igualdad
Rule 56    comparador -> <
Rule 57    comparador -> >
Rule 58    condicion -> OR
Rule 59    condicion -> AND
Rule 60    condicion -> NOT
Rule 61    condicion -> !
Rule 62    condicion -> &
Rule 63    condicion -> |
Rule 64    expression -> multiplicador
Rule 65    multiplicador -> operando
Rule 66    expression -> expression + multiplicador
Rule 67    expression -> expression - multiplicador
Rule 68    operando -> NUMBER
Rule 69    operando -> CHAR
Rule 70    operando -> CIERTO
Rule 71    operando -> FALSO
Rule 72    operando -> ( expression )
Rule 73    operando -> + operando
Rule 74    operando -> - operando
Rule 75    operando -> NAME [ NUMBER ]
Rule 76    operando -> NAME . operando
Rule 77    operando -> LONG
Rule 78    multiplicador -> multiplicador * operando
Rule 79    multiplicador -> multiplicador / operando
Rule 80    operando -> EXPONENCIAL ( NUMBER )
Rule 81    operando -> LOGARITMICA ( NUMBER )
Rule 82    operando -> SENO ( NUMBER )
Rule 83    operando -> COSENO ( NUMBER )
Rule 84    operando -> NAME

Terminals, with rules where they appear

!                    : 61
&                    : 62
(                    : 34 35 72 80 81 82 83
)                    : 34 35 72 80 81 82 83
*                    : 78
+                    : 66 73
,                    : 18 32 36 41
-                    : 67 74
.                    : 28 76
/                    : 79
:                    : 34
;                    : 30 31
<                    : 56
>                    : 57
AND                  : 59
BOOLEANO             : 20
CARACTER             : 23
CHAR                 : 69
CIERTO               : 70
COSENO               : 83
DEVOLVER             : 34
ENTERO               : 21
ENTONCES             : 44 45
EXPONENCIAL          : 80
FALSO                : 71
FINMIENTRAS          : 46
FINSI                : 44 45
FUNCION              : 34
IgualIgual           : 52
Igualdad             : 16 17 27 28 55
LOGARITMICA          : 81
LONG                 : 77
MIENTRAS             : 46
MayorIgual           : 54
MenorIgual           : 53
NAME                 : 14 15 16 17 18 19 26 27 28 28 29 29 32 33 34 35 36 37 75 76 84
NOT                  : 60
NUMBER               : 14 27 68 75 80 81 82 83
OR                   : 58
REAL                 : 22
REGISTRO             : 15 24
SALTO_LINEA          : 1 39
SENO                 : 82
SI                   : 44 45
SINO                 : 45
VECTOR               : 14 25
[                    : 14 27 75
]                    : 14 27 75
error                : 
{                    : 15 34
|                    : 63
}                    : 15 34

Nonterminals, with rules where they appear

argumentos           : 35 41
asignacion           : 4
atributos            : 15 30
blq_sentencia        : 34 34 39 44 44 45 45 45 46
bucles               : 11
campos               : 30 31 32
comparador           : 48
condicion            : 50
condicionales        : 10
declaracion          : 5
def_funcion          : 8
empty                : 38 43
expression           : 48 49 66 67 72
list_args            : 34 36
logico               : 12 16 17 27 28 46 50
multiplicador        : 64 66 67 78 79
names                : 13 18
operando             : 41 42 65 73 74 76 78 79
registros            : 7
restriccion          : 48 50 51
statement            : 1 2 39 40
statements           : 1 0
tipo                 : 13 14 16 30 31 34 36 37
uso_funcion          : 9
vectores             : 6

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement SALTO_LINEA statements
    (2) statements -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    $end            reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . SALTO_LINEA statements
    (2) statements -> statement .

    SALTO_LINEA     shift and go to state 39
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (4) statement -> asignacion .

    SALTO_LINEA     reduce using rule 4 (statement -> asignacion .)
    $end            reduce using rule 4 (statement -> asignacion .)
    ENTONCES        reduce using rule 4 (statement -> asignacion .)
    FINMIENTRAS     reduce using rule 4 (statement -> asignacion .)
    FINSI           reduce using rule 4 (statement -> asignacion .)
    SINO            reduce using rule 4 (statement -> asignacion .)
    DEVOLVER        reduce using rule 4 (statement -> asignacion .)
    }               reduce using rule 4 (statement -> asignacion .)


state 4

    (5) statement -> declaracion .

    SALTO_LINEA     reduce using rule 5 (statement -> declaracion .)
    $end            reduce using rule 5 (statement -> declaracion .)
    ENTONCES        reduce using rule 5 (statement -> declaracion .)
    FINMIENTRAS     reduce using rule 5 (statement -> declaracion .)
    FINSI           reduce using rule 5 (statement -> declaracion .)
    SINO            reduce using rule 5 (statement -> declaracion .)
    DEVOLVER        reduce using rule 5 (statement -> declaracion .)
    }               reduce using rule 5 (statement -> declaracion .)


state 5

    (6) statement -> vectores .

    SALTO_LINEA     reduce using rule 6 (statement -> vectores .)
    $end            reduce using rule 6 (statement -> vectores .)
    ENTONCES        reduce using rule 6 (statement -> vectores .)
    FINMIENTRAS     reduce using rule 6 (statement -> vectores .)
    FINSI           reduce using rule 6 (statement -> vectores .)
    SINO            reduce using rule 6 (statement -> vectores .)
    DEVOLVER        reduce using rule 6 (statement -> vectores .)
    }               reduce using rule 6 (statement -> vectores .)


state 6

    (7) statement -> registros .

    SALTO_LINEA     reduce using rule 7 (statement -> registros .)
    $end            reduce using rule 7 (statement -> registros .)
    ENTONCES        reduce using rule 7 (statement -> registros .)
    FINMIENTRAS     reduce using rule 7 (statement -> registros .)
    FINSI           reduce using rule 7 (statement -> registros .)
    SINO            reduce using rule 7 (statement -> registros .)
    DEVOLVER        reduce using rule 7 (statement -> registros .)
    }               reduce using rule 7 (statement -> registros .)


state 7

    (8) statement -> def_funcion .

    SALTO_LINEA     reduce using rule 8 (statement -> def_funcion .)
    $end            reduce using rule 8 (statement -> def_funcion .)
    ENTONCES        reduce using rule 8 (statement -> def_funcion .)
    FINMIENTRAS     reduce using rule 8 (statement -> def_funcion .)
    FINSI           reduce using rule 8 (statement -> def_funcion .)
    SINO            reduce using rule 8 (statement -> def_funcion .)
    DEVOLVER        reduce using rule 8 (statement -> def_funcion .)
    }               reduce using rule 8 (statement -> def_funcion .)


state 8

    (9) statement -> uso_funcion .

    SALTO_LINEA     reduce using rule 9 (statement -> uso_funcion .)
    $end            reduce using rule 9 (statement -> uso_funcion .)
    ENTONCES        reduce using rule 9 (statement -> uso_funcion .)
    FINMIENTRAS     reduce using rule 9 (statement -> uso_funcion .)
    FINSI           reduce using rule 9 (statement -> uso_funcion .)
    SINO            reduce using rule 9 (statement -> uso_funcion .)
    DEVOLVER        reduce using rule 9 (statement -> uso_funcion .)
    }               reduce using rule 9 (statement -> uso_funcion .)


state 9

    (10) statement -> condicionales .

    SALTO_LINEA     reduce using rule 10 (statement -> condicionales .)
    $end            reduce using rule 10 (statement -> condicionales .)
    ENTONCES        reduce using rule 10 (statement -> condicionales .)
    FINMIENTRAS     reduce using rule 10 (statement -> condicionales .)
    FINSI           reduce using rule 10 (statement -> condicionales .)
    SINO            reduce using rule 10 (statement -> condicionales .)
    DEVOLVER        reduce using rule 10 (statement -> condicionales .)
    }               reduce using rule 10 (statement -> condicionales .)


state 10

    (11) statement -> bucles .

    SALTO_LINEA     reduce using rule 11 (statement -> bucles .)
    $end            reduce using rule 11 (statement -> bucles .)
    ENTONCES        reduce using rule 11 (statement -> bucles .)
    FINMIENTRAS     reduce using rule 11 (statement -> bucles .)
    FINSI           reduce using rule 11 (statement -> bucles .)
    SINO            reduce using rule 11 (statement -> bucles .)
    DEVOLVER        reduce using rule 11 (statement -> bucles .)
    }               reduce using rule 11 (statement -> bucles .)


state 11

    (12) statement -> logico .
    (50) logico -> logico . condicion restriccion
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |

    SALTO_LINEA     reduce using rule 12 (statement -> logico .)
    $end            reduce using rule 12 (statement -> logico .)
    ENTONCES        reduce using rule 12 (statement -> logico .)
    FINMIENTRAS     reduce using rule 12 (statement -> logico .)
    FINSI           reduce using rule 12 (statement -> logico .)
    SINO            reduce using rule 12 (statement -> logico .)
    DEVOLVER        reduce using rule 12 (statement -> logico .)
    }               reduce using rule 12 (statement -> logico .)
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46

    condicion                      shift and go to state 40

state 12

    (16) asignacion -> tipo . NAME Igualdad logico
    (13) declaracion -> tipo . names
    (18) names -> . NAME , names
    (19) names -> . NAME

    NAME            shift and go to state 47

    names                          shift and go to state 48

state 13

    (17) asignacion -> NAME . Igualdad logico
    (27) vectores -> NAME . [ NUMBER ] Igualdad logico
    (28) registros -> NAME . . NAME Igualdad logico
    (29) registros -> NAME . NAME
    (35) uso_funcion -> NAME . ( argumentos )
    (26) tipo -> NAME .
    (75) operando -> NAME . [ NUMBER ]
    (76) operando -> NAME . . operando
    (84) operando -> NAME .

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for Igualdad resolved as shift
    Igualdad        shift and go to state 50
    [               shift and go to state 51
    .               shift and go to state 52
    NAME            shift and go to state 49
    (               shift and go to state 53
    *               reduce using rule 84 (operando -> NAME .)
    /               reduce using rule 84 (operando -> NAME .)
    +               reduce using rule 84 (operando -> NAME .)
    -               reduce using rule 84 (operando -> NAME .)
    IgualIgual      reduce using rule 84 (operando -> NAME .)
    MenorIgual      reduce using rule 84 (operando -> NAME .)
    MayorIgual      reduce using rule 84 (operando -> NAME .)
    <               reduce using rule 84 (operando -> NAME .)
    >               reduce using rule 84 (operando -> NAME .)
    OR              reduce using rule 84 (operando -> NAME .)
    AND             reduce using rule 84 (operando -> NAME .)
    NOT             reduce using rule 84 (operando -> NAME .)
    !               reduce using rule 84 (operando -> NAME .)
    &               reduce using rule 84 (operando -> NAME .)
    |               reduce using rule 84 (operando -> NAME .)
    SALTO_LINEA     reduce using rule 84 (operando -> NAME .)
    $end            reduce using rule 84 (operando -> NAME .)
    ENTONCES        reduce using rule 84 (operando -> NAME .)
    FINMIENTRAS     reduce using rule 84 (operando -> NAME .)
    FINSI           reduce using rule 84 (operando -> NAME .)
    SINO            reduce using rule 84 (operando -> NAME .)
    DEVOLVER        reduce using rule 84 (operando -> NAME .)
    }               reduce using rule 84 (operando -> NAME .)

  ! NAME            [ reduce using rule 26 (tipo -> NAME .) ]
  ! Igualdad        [ reduce using rule 84 (operando -> NAME .) ]


state 14

    (14) declaracion -> VECTOR . tipo NAME [ NUMBER ]
    (25) tipo -> VECTOR .
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME

  ! shift/reduce conflict for NAME resolved as shift
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56

  ! NAME            [ reduce using rule 25 (tipo -> VECTOR .) ]

    tipo                           shift and go to state 55

state 15

    (68) operando -> NUMBER .

    *               reduce using rule 68 (operando -> NUMBER .)
    /               reduce using rule 68 (operando -> NUMBER .)
    +               reduce using rule 68 (operando -> NUMBER .)
    -               reduce using rule 68 (operando -> NUMBER .)
    IgualIgual      reduce using rule 68 (operando -> NUMBER .)
    MenorIgual      reduce using rule 68 (operando -> NUMBER .)
    MayorIgual      reduce using rule 68 (operando -> NUMBER .)
    Igualdad        reduce using rule 68 (operando -> NUMBER .)
    <               reduce using rule 68 (operando -> NUMBER .)
    >               reduce using rule 68 (operando -> NUMBER .)
    OR              reduce using rule 68 (operando -> NUMBER .)
    AND             reduce using rule 68 (operando -> NUMBER .)
    NOT             reduce using rule 68 (operando -> NUMBER .)
    !               reduce using rule 68 (operando -> NUMBER .)
    &               reduce using rule 68 (operando -> NUMBER .)
    |               reduce using rule 68 (operando -> NUMBER .)
    SALTO_LINEA     reduce using rule 68 (operando -> NUMBER .)
    $end            reduce using rule 68 (operando -> NUMBER .)
    )               reduce using rule 68 (operando -> NUMBER .)
    ENTONCES        reduce using rule 68 (operando -> NUMBER .)
    NAME            reduce using rule 68 (operando -> NUMBER .)
    VECTOR          reduce using rule 68 (operando -> NUMBER .)
    REGISTRO        reduce using rule 68 (operando -> NUMBER .)
    FUNCION         reduce using rule 68 (operando -> NUMBER .)
    SI              reduce using rule 68 (operando -> NUMBER .)
    MIENTRAS        reduce using rule 68 (operando -> NUMBER .)
    BOOLEANO        reduce using rule 68 (operando -> NUMBER .)
    ENTERO          reduce using rule 68 (operando -> NUMBER .)
    REAL            reduce using rule 68 (operando -> NUMBER .)
    CARACTER        reduce using rule 68 (operando -> NUMBER .)
    NUMBER          reduce using rule 68 (operando -> NUMBER .)
    CHAR            reduce using rule 68 (operando -> NUMBER .)
    CIERTO          reduce using rule 68 (operando -> NUMBER .)
    FALSO           reduce using rule 68 (operando -> NUMBER .)
    (               reduce using rule 68 (operando -> NUMBER .)
    LONG            reduce using rule 68 (operando -> NUMBER .)
    EXPONENCIAL     reduce using rule 68 (operando -> NUMBER .)
    LOGARITMICA     reduce using rule 68 (operando -> NUMBER .)
    SENO            reduce using rule 68 (operando -> NUMBER .)
    COSENO          reduce using rule 68 (operando -> NUMBER .)
    FINMIENTRAS     reduce using rule 68 (operando -> NUMBER .)
    FINSI           reduce using rule 68 (operando -> NUMBER .)
    SINO            reduce using rule 68 (operando -> NUMBER .)
    DEVOLVER        reduce using rule 68 (operando -> NUMBER .)
    }               reduce using rule 68 (operando -> NUMBER .)
    ,               reduce using rule 68 (operando -> NUMBER .)


state 16

    (15) declaracion -> REGISTRO . NAME { atributos }
    (24) tipo -> REGISTRO .

  ! shift/reduce conflict for NAME resolved as shift
    NAME            shift and go to state 58

  ! NAME            [ reduce using rule 24 (tipo -> REGISTRO .) ]


state 17

    (34) def_funcion -> FUNCION . NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }

    NAME            shift and go to state 59


state 18

    (72) operando -> ( . expression )
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    expression                     shift and go to state 60
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 19

    (44) condicionales -> SI . blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> SI . blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    ENTONCES        reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    blq_sentencia                  shift and go to state 62
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 20

    (46) bucles -> MIENTRAS . logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 64
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 21

    (51) logico -> restriccion .
    (48) restriccion -> restriccion . comparador expression
    (52) comparador -> . IgualIgual
    (53) comparador -> . MenorIgual
    (54) comparador -> . MayorIgual
    (55) comparador -> . Igualdad
    (56) comparador -> . <
    (57) comparador -> . >

    OR              reduce using rule 51 (logico -> restriccion .)
    AND             reduce using rule 51 (logico -> restriccion .)
    NOT             reduce using rule 51 (logico -> restriccion .)
    !               reduce using rule 51 (logico -> restriccion .)
    &               reduce using rule 51 (logico -> restriccion .)
    |               reduce using rule 51 (logico -> restriccion .)
    SALTO_LINEA     reduce using rule 51 (logico -> restriccion .)
    $end            reduce using rule 51 (logico -> restriccion .)
    ENTONCES        reduce using rule 51 (logico -> restriccion .)
    NAME            reduce using rule 51 (logico -> restriccion .)
    VECTOR          reduce using rule 51 (logico -> restriccion .)
    REGISTRO        reduce using rule 51 (logico -> restriccion .)
    FUNCION         reduce using rule 51 (logico -> restriccion .)
    SI              reduce using rule 51 (logico -> restriccion .)
    MIENTRAS        reduce using rule 51 (logico -> restriccion .)
    BOOLEANO        reduce using rule 51 (logico -> restriccion .)
    ENTERO          reduce using rule 51 (logico -> restriccion .)
    REAL            reduce using rule 51 (logico -> restriccion .)
    CARACTER        reduce using rule 51 (logico -> restriccion .)
    NUMBER          reduce using rule 51 (logico -> restriccion .)
    CHAR            reduce using rule 51 (logico -> restriccion .)
    CIERTO          reduce using rule 51 (logico -> restriccion .)
    FALSO           reduce using rule 51 (logico -> restriccion .)
    (               reduce using rule 51 (logico -> restriccion .)
    +               reduce using rule 51 (logico -> restriccion .)
    -               reduce using rule 51 (logico -> restriccion .)
    LONG            reduce using rule 51 (logico -> restriccion .)
    EXPONENCIAL     reduce using rule 51 (logico -> restriccion .)
    LOGARITMICA     reduce using rule 51 (logico -> restriccion .)
    SENO            reduce using rule 51 (logico -> restriccion .)
    COSENO          reduce using rule 51 (logico -> restriccion .)
    FINMIENTRAS     reduce using rule 51 (logico -> restriccion .)
    FINSI           reduce using rule 51 (logico -> restriccion .)
    SINO            reduce using rule 51 (logico -> restriccion .)
    DEVOLVER        reduce using rule 51 (logico -> restriccion .)
    }               reduce using rule 51 (logico -> restriccion .)
    IgualIgual      shift and go to state 66
    MenorIgual      shift and go to state 67
    MayorIgual      shift and go to state 68
    Igualdad        shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71

    comparador                     shift and go to state 65

state 22

    (20) tipo -> BOOLEANO .

    NAME            reduce using rule 20 (tipo -> BOOLEANO .)
    {               reduce using rule 20 (tipo -> BOOLEANO .)


state 23

    (21) tipo -> ENTERO .

    NAME            reduce using rule 21 (tipo -> ENTERO .)
    {               reduce using rule 21 (tipo -> ENTERO .)


state 24

    (22) tipo -> REAL .

    NAME            reduce using rule 22 (tipo -> REAL .)
    {               reduce using rule 22 (tipo -> REAL .)


state 25

    (23) tipo -> CARACTER .

    NAME            reduce using rule 23 (tipo -> CARACTER .)
    {               reduce using rule 23 (tipo -> CARACTER .)


state 26

    (49) restriccion -> expression .
    (66) expression -> expression . + multiplicador
    (67) expression -> expression . - multiplicador

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    IgualIgual      reduce using rule 49 (restriccion -> expression .)
    MenorIgual      reduce using rule 49 (restriccion -> expression .)
    MayorIgual      reduce using rule 49 (restriccion -> expression .)
    Igualdad        reduce using rule 49 (restriccion -> expression .)
    <               reduce using rule 49 (restriccion -> expression .)
    >               reduce using rule 49 (restriccion -> expression .)
    OR              reduce using rule 49 (restriccion -> expression .)
    AND             reduce using rule 49 (restriccion -> expression .)
    NOT             reduce using rule 49 (restriccion -> expression .)
    !               reduce using rule 49 (restriccion -> expression .)
    &               reduce using rule 49 (restriccion -> expression .)
    |               reduce using rule 49 (restriccion -> expression .)
    SALTO_LINEA     reduce using rule 49 (restriccion -> expression .)
    $end            reduce using rule 49 (restriccion -> expression .)
    ENTONCES        reduce using rule 49 (restriccion -> expression .)
    NAME            reduce using rule 49 (restriccion -> expression .)
    VECTOR          reduce using rule 49 (restriccion -> expression .)
    REGISTRO        reduce using rule 49 (restriccion -> expression .)
    FUNCION         reduce using rule 49 (restriccion -> expression .)
    SI              reduce using rule 49 (restriccion -> expression .)
    MIENTRAS        reduce using rule 49 (restriccion -> expression .)
    BOOLEANO        reduce using rule 49 (restriccion -> expression .)
    ENTERO          reduce using rule 49 (restriccion -> expression .)
    REAL            reduce using rule 49 (restriccion -> expression .)
    CARACTER        reduce using rule 49 (restriccion -> expression .)
    NUMBER          reduce using rule 49 (restriccion -> expression .)
    CHAR            reduce using rule 49 (restriccion -> expression .)
    CIERTO          reduce using rule 49 (restriccion -> expression .)
    FALSO           reduce using rule 49 (restriccion -> expression .)
    (               reduce using rule 49 (restriccion -> expression .)
    LONG            reduce using rule 49 (restriccion -> expression .)
    EXPONENCIAL     reduce using rule 49 (restriccion -> expression .)
    LOGARITMICA     reduce using rule 49 (restriccion -> expression .)
    SENO            reduce using rule 49 (restriccion -> expression .)
    COSENO          reduce using rule 49 (restriccion -> expression .)
    FINMIENTRAS     reduce using rule 49 (restriccion -> expression .)
    FINSI           reduce using rule 49 (restriccion -> expression .)
    SINO            reduce using rule 49 (restriccion -> expression .)
    DEVOLVER        reduce using rule 49 (restriccion -> expression .)
    }               reduce using rule 49 (restriccion -> expression .)
    +               shift and go to state 72
    -               shift and go to state 73

  ! +               [ reduce using rule 49 (restriccion -> expression .) ]
  ! -               [ reduce using rule 49 (restriccion -> expression .) ]


state 27

    (64) expression -> multiplicador .
    (78) multiplicador -> multiplicador . * operando
    (79) multiplicador -> multiplicador . / operando

    +               reduce using rule 64 (expression -> multiplicador .)
    -               reduce using rule 64 (expression -> multiplicador .)
    IgualIgual      reduce using rule 64 (expression -> multiplicador .)
    MenorIgual      reduce using rule 64 (expression -> multiplicador .)
    MayorIgual      reduce using rule 64 (expression -> multiplicador .)
    Igualdad        reduce using rule 64 (expression -> multiplicador .)
    <               reduce using rule 64 (expression -> multiplicador .)
    >               reduce using rule 64 (expression -> multiplicador .)
    OR              reduce using rule 64 (expression -> multiplicador .)
    AND             reduce using rule 64 (expression -> multiplicador .)
    NOT             reduce using rule 64 (expression -> multiplicador .)
    !               reduce using rule 64 (expression -> multiplicador .)
    &               reduce using rule 64 (expression -> multiplicador .)
    |               reduce using rule 64 (expression -> multiplicador .)
    SALTO_LINEA     reduce using rule 64 (expression -> multiplicador .)
    $end            reduce using rule 64 (expression -> multiplicador .)
    )               reduce using rule 64 (expression -> multiplicador .)
    ENTONCES        reduce using rule 64 (expression -> multiplicador .)
    NAME            reduce using rule 64 (expression -> multiplicador .)
    VECTOR          reduce using rule 64 (expression -> multiplicador .)
    REGISTRO        reduce using rule 64 (expression -> multiplicador .)
    FUNCION         reduce using rule 64 (expression -> multiplicador .)
    SI              reduce using rule 64 (expression -> multiplicador .)
    MIENTRAS        reduce using rule 64 (expression -> multiplicador .)
    BOOLEANO        reduce using rule 64 (expression -> multiplicador .)
    ENTERO          reduce using rule 64 (expression -> multiplicador .)
    REAL            reduce using rule 64 (expression -> multiplicador .)
    CARACTER        reduce using rule 64 (expression -> multiplicador .)
    NUMBER          reduce using rule 64 (expression -> multiplicador .)
    CHAR            reduce using rule 64 (expression -> multiplicador .)
    CIERTO          reduce using rule 64 (expression -> multiplicador .)
    FALSO           reduce using rule 64 (expression -> multiplicador .)
    (               reduce using rule 64 (expression -> multiplicador .)
    LONG            reduce using rule 64 (expression -> multiplicador .)
    EXPONENCIAL     reduce using rule 64 (expression -> multiplicador .)
    LOGARITMICA     reduce using rule 64 (expression -> multiplicador .)
    SENO            reduce using rule 64 (expression -> multiplicador .)
    COSENO          reduce using rule 64 (expression -> multiplicador .)
    FINMIENTRAS     reduce using rule 64 (expression -> multiplicador .)
    FINSI           reduce using rule 64 (expression -> multiplicador .)
    SINO            reduce using rule 64 (expression -> multiplicador .)
    DEVOLVER        reduce using rule 64 (expression -> multiplicador .)
    }               reduce using rule 64 (expression -> multiplicador .)
    *               shift and go to state 74
    /               shift and go to state 75


state 28

    (73) operando -> + . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 76

state 29

    (74) operando -> - . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 77

state 30

    (65) multiplicador -> operando .

    *               reduce using rule 65 (multiplicador -> operando .)
    /               reduce using rule 65 (multiplicador -> operando .)
    +               reduce using rule 65 (multiplicador -> operando .)
    -               reduce using rule 65 (multiplicador -> operando .)
    IgualIgual      reduce using rule 65 (multiplicador -> operando .)
    MenorIgual      reduce using rule 65 (multiplicador -> operando .)
    MayorIgual      reduce using rule 65 (multiplicador -> operando .)
    Igualdad        reduce using rule 65 (multiplicador -> operando .)
    <               reduce using rule 65 (multiplicador -> operando .)
    >               reduce using rule 65 (multiplicador -> operando .)
    OR              reduce using rule 65 (multiplicador -> operando .)
    AND             reduce using rule 65 (multiplicador -> operando .)
    NOT             reduce using rule 65 (multiplicador -> operando .)
    !               reduce using rule 65 (multiplicador -> operando .)
    &               reduce using rule 65 (multiplicador -> operando .)
    |               reduce using rule 65 (multiplicador -> operando .)
    SALTO_LINEA     reduce using rule 65 (multiplicador -> operando .)
    $end            reduce using rule 65 (multiplicador -> operando .)
    )               reduce using rule 65 (multiplicador -> operando .)
    ENTONCES        reduce using rule 65 (multiplicador -> operando .)
    NAME            reduce using rule 65 (multiplicador -> operando .)
    VECTOR          reduce using rule 65 (multiplicador -> operando .)
    REGISTRO        reduce using rule 65 (multiplicador -> operando .)
    FUNCION         reduce using rule 65 (multiplicador -> operando .)
    SI              reduce using rule 65 (multiplicador -> operando .)
    MIENTRAS        reduce using rule 65 (multiplicador -> operando .)
    BOOLEANO        reduce using rule 65 (multiplicador -> operando .)
    ENTERO          reduce using rule 65 (multiplicador -> operando .)
    REAL            reduce using rule 65 (multiplicador -> operando .)
    CARACTER        reduce using rule 65 (multiplicador -> operando .)
    NUMBER          reduce using rule 65 (multiplicador -> operando .)
    CHAR            reduce using rule 65 (multiplicador -> operando .)
    CIERTO          reduce using rule 65 (multiplicador -> operando .)
    FALSO           reduce using rule 65 (multiplicador -> operando .)
    (               reduce using rule 65 (multiplicador -> operando .)
    LONG            reduce using rule 65 (multiplicador -> operando .)
    EXPONENCIAL     reduce using rule 65 (multiplicador -> operando .)
    LOGARITMICA     reduce using rule 65 (multiplicador -> operando .)
    SENO            reduce using rule 65 (multiplicador -> operando .)
    COSENO          reduce using rule 65 (multiplicador -> operando .)
    FINMIENTRAS     reduce using rule 65 (multiplicador -> operando .)
    FINSI           reduce using rule 65 (multiplicador -> operando .)
    SINO            reduce using rule 65 (multiplicador -> operando .)
    DEVOLVER        reduce using rule 65 (multiplicador -> operando .)
    }               reduce using rule 65 (multiplicador -> operando .)


state 31

    (69) operando -> CHAR .

    *               reduce using rule 69 (operando -> CHAR .)
    /               reduce using rule 69 (operando -> CHAR .)
    +               reduce using rule 69 (operando -> CHAR .)
    -               reduce using rule 69 (operando -> CHAR .)
    IgualIgual      reduce using rule 69 (operando -> CHAR .)
    MenorIgual      reduce using rule 69 (operando -> CHAR .)
    MayorIgual      reduce using rule 69 (operando -> CHAR .)
    Igualdad        reduce using rule 69 (operando -> CHAR .)
    <               reduce using rule 69 (operando -> CHAR .)
    >               reduce using rule 69 (operando -> CHAR .)
    OR              reduce using rule 69 (operando -> CHAR .)
    AND             reduce using rule 69 (operando -> CHAR .)
    NOT             reduce using rule 69 (operando -> CHAR .)
    !               reduce using rule 69 (operando -> CHAR .)
    &               reduce using rule 69 (operando -> CHAR .)
    |               reduce using rule 69 (operando -> CHAR .)
    SALTO_LINEA     reduce using rule 69 (operando -> CHAR .)
    $end            reduce using rule 69 (operando -> CHAR .)
    )               reduce using rule 69 (operando -> CHAR .)
    ENTONCES        reduce using rule 69 (operando -> CHAR .)
    NAME            reduce using rule 69 (operando -> CHAR .)
    VECTOR          reduce using rule 69 (operando -> CHAR .)
    REGISTRO        reduce using rule 69 (operando -> CHAR .)
    FUNCION         reduce using rule 69 (operando -> CHAR .)
    SI              reduce using rule 69 (operando -> CHAR .)
    MIENTRAS        reduce using rule 69 (operando -> CHAR .)
    BOOLEANO        reduce using rule 69 (operando -> CHAR .)
    ENTERO          reduce using rule 69 (operando -> CHAR .)
    REAL            reduce using rule 69 (operando -> CHAR .)
    CARACTER        reduce using rule 69 (operando -> CHAR .)
    NUMBER          reduce using rule 69 (operando -> CHAR .)
    CHAR            reduce using rule 69 (operando -> CHAR .)
    CIERTO          reduce using rule 69 (operando -> CHAR .)
    FALSO           reduce using rule 69 (operando -> CHAR .)
    (               reduce using rule 69 (operando -> CHAR .)
    LONG            reduce using rule 69 (operando -> CHAR .)
    EXPONENCIAL     reduce using rule 69 (operando -> CHAR .)
    LOGARITMICA     reduce using rule 69 (operando -> CHAR .)
    SENO            reduce using rule 69 (operando -> CHAR .)
    COSENO          reduce using rule 69 (operando -> CHAR .)
    FINMIENTRAS     reduce using rule 69 (operando -> CHAR .)
    FINSI           reduce using rule 69 (operando -> CHAR .)
    SINO            reduce using rule 69 (operando -> CHAR .)
    DEVOLVER        reduce using rule 69 (operando -> CHAR .)
    }               reduce using rule 69 (operando -> CHAR .)
    ,               reduce using rule 69 (operando -> CHAR .)


state 32

    (70) operando -> CIERTO .

    *               reduce using rule 70 (operando -> CIERTO .)
    /               reduce using rule 70 (operando -> CIERTO .)
    +               reduce using rule 70 (operando -> CIERTO .)
    -               reduce using rule 70 (operando -> CIERTO .)
    IgualIgual      reduce using rule 70 (operando -> CIERTO .)
    MenorIgual      reduce using rule 70 (operando -> CIERTO .)
    MayorIgual      reduce using rule 70 (operando -> CIERTO .)
    Igualdad        reduce using rule 70 (operando -> CIERTO .)
    <               reduce using rule 70 (operando -> CIERTO .)
    >               reduce using rule 70 (operando -> CIERTO .)
    OR              reduce using rule 70 (operando -> CIERTO .)
    AND             reduce using rule 70 (operando -> CIERTO .)
    NOT             reduce using rule 70 (operando -> CIERTO .)
    !               reduce using rule 70 (operando -> CIERTO .)
    &               reduce using rule 70 (operando -> CIERTO .)
    |               reduce using rule 70 (operando -> CIERTO .)
    SALTO_LINEA     reduce using rule 70 (operando -> CIERTO .)
    $end            reduce using rule 70 (operando -> CIERTO .)
    )               reduce using rule 70 (operando -> CIERTO .)
    ENTONCES        reduce using rule 70 (operando -> CIERTO .)
    NAME            reduce using rule 70 (operando -> CIERTO .)
    VECTOR          reduce using rule 70 (operando -> CIERTO .)
    REGISTRO        reduce using rule 70 (operando -> CIERTO .)
    FUNCION         reduce using rule 70 (operando -> CIERTO .)
    SI              reduce using rule 70 (operando -> CIERTO .)
    MIENTRAS        reduce using rule 70 (operando -> CIERTO .)
    BOOLEANO        reduce using rule 70 (operando -> CIERTO .)
    ENTERO          reduce using rule 70 (operando -> CIERTO .)
    REAL            reduce using rule 70 (operando -> CIERTO .)
    CARACTER        reduce using rule 70 (operando -> CIERTO .)
    NUMBER          reduce using rule 70 (operando -> CIERTO .)
    CHAR            reduce using rule 70 (operando -> CIERTO .)
    CIERTO          reduce using rule 70 (operando -> CIERTO .)
    FALSO           reduce using rule 70 (operando -> CIERTO .)
    (               reduce using rule 70 (operando -> CIERTO .)
    LONG            reduce using rule 70 (operando -> CIERTO .)
    EXPONENCIAL     reduce using rule 70 (operando -> CIERTO .)
    LOGARITMICA     reduce using rule 70 (operando -> CIERTO .)
    SENO            reduce using rule 70 (operando -> CIERTO .)
    COSENO          reduce using rule 70 (operando -> CIERTO .)
    FINMIENTRAS     reduce using rule 70 (operando -> CIERTO .)
    FINSI           reduce using rule 70 (operando -> CIERTO .)
    SINO            reduce using rule 70 (operando -> CIERTO .)
    DEVOLVER        reduce using rule 70 (operando -> CIERTO .)
    }               reduce using rule 70 (operando -> CIERTO .)
    ,               reduce using rule 70 (operando -> CIERTO .)


state 33

    (71) operando -> FALSO .

    *               reduce using rule 71 (operando -> FALSO .)
    /               reduce using rule 71 (operando -> FALSO .)
    +               reduce using rule 71 (operando -> FALSO .)
    -               reduce using rule 71 (operando -> FALSO .)
    IgualIgual      reduce using rule 71 (operando -> FALSO .)
    MenorIgual      reduce using rule 71 (operando -> FALSO .)
    MayorIgual      reduce using rule 71 (operando -> FALSO .)
    Igualdad        reduce using rule 71 (operando -> FALSO .)
    <               reduce using rule 71 (operando -> FALSO .)
    >               reduce using rule 71 (operando -> FALSO .)
    OR              reduce using rule 71 (operando -> FALSO .)
    AND             reduce using rule 71 (operando -> FALSO .)
    NOT             reduce using rule 71 (operando -> FALSO .)
    !               reduce using rule 71 (operando -> FALSO .)
    &               reduce using rule 71 (operando -> FALSO .)
    |               reduce using rule 71 (operando -> FALSO .)
    SALTO_LINEA     reduce using rule 71 (operando -> FALSO .)
    $end            reduce using rule 71 (operando -> FALSO .)
    )               reduce using rule 71 (operando -> FALSO .)
    ENTONCES        reduce using rule 71 (operando -> FALSO .)
    NAME            reduce using rule 71 (operando -> FALSO .)
    VECTOR          reduce using rule 71 (operando -> FALSO .)
    REGISTRO        reduce using rule 71 (operando -> FALSO .)
    FUNCION         reduce using rule 71 (operando -> FALSO .)
    SI              reduce using rule 71 (operando -> FALSO .)
    MIENTRAS        reduce using rule 71 (operando -> FALSO .)
    BOOLEANO        reduce using rule 71 (operando -> FALSO .)
    ENTERO          reduce using rule 71 (operando -> FALSO .)
    REAL            reduce using rule 71 (operando -> FALSO .)
    CARACTER        reduce using rule 71 (operando -> FALSO .)
    NUMBER          reduce using rule 71 (operando -> FALSO .)
    CHAR            reduce using rule 71 (operando -> FALSO .)
    CIERTO          reduce using rule 71 (operando -> FALSO .)
    FALSO           reduce using rule 71 (operando -> FALSO .)
    (               reduce using rule 71 (operando -> FALSO .)
    LONG            reduce using rule 71 (operando -> FALSO .)
    EXPONENCIAL     reduce using rule 71 (operando -> FALSO .)
    LOGARITMICA     reduce using rule 71 (operando -> FALSO .)
    SENO            reduce using rule 71 (operando -> FALSO .)
    COSENO          reduce using rule 71 (operando -> FALSO .)
    FINMIENTRAS     reduce using rule 71 (operando -> FALSO .)
    FINSI           reduce using rule 71 (operando -> FALSO .)
    SINO            reduce using rule 71 (operando -> FALSO .)
    DEVOLVER        reduce using rule 71 (operando -> FALSO .)
    }               reduce using rule 71 (operando -> FALSO .)
    ,               reduce using rule 71 (operando -> FALSO .)


state 34

    (77) operando -> LONG .

    *               reduce using rule 77 (operando -> LONG .)
    /               reduce using rule 77 (operando -> LONG .)
    +               reduce using rule 77 (operando -> LONG .)
    -               reduce using rule 77 (operando -> LONG .)
    IgualIgual      reduce using rule 77 (operando -> LONG .)
    MenorIgual      reduce using rule 77 (operando -> LONG .)
    MayorIgual      reduce using rule 77 (operando -> LONG .)
    Igualdad        reduce using rule 77 (operando -> LONG .)
    <               reduce using rule 77 (operando -> LONG .)
    >               reduce using rule 77 (operando -> LONG .)
    OR              reduce using rule 77 (operando -> LONG .)
    AND             reduce using rule 77 (operando -> LONG .)
    NOT             reduce using rule 77 (operando -> LONG .)
    !               reduce using rule 77 (operando -> LONG .)
    &               reduce using rule 77 (operando -> LONG .)
    |               reduce using rule 77 (operando -> LONG .)
    SALTO_LINEA     reduce using rule 77 (operando -> LONG .)
    $end            reduce using rule 77 (operando -> LONG .)
    )               reduce using rule 77 (operando -> LONG .)
    ENTONCES        reduce using rule 77 (operando -> LONG .)
    NAME            reduce using rule 77 (operando -> LONG .)
    VECTOR          reduce using rule 77 (operando -> LONG .)
    REGISTRO        reduce using rule 77 (operando -> LONG .)
    FUNCION         reduce using rule 77 (operando -> LONG .)
    SI              reduce using rule 77 (operando -> LONG .)
    MIENTRAS        reduce using rule 77 (operando -> LONG .)
    BOOLEANO        reduce using rule 77 (operando -> LONG .)
    ENTERO          reduce using rule 77 (operando -> LONG .)
    REAL            reduce using rule 77 (operando -> LONG .)
    CARACTER        reduce using rule 77 (operando -> LONG .)
    NUMBER          reduce using rule 77 (operando -> LONG .)
    CHAR            reduce using rule 77 (operando -> LONG .)
    CIERTO          reduce using rule 77 (operando -> LONG .)
    FALSO           reduce using rule 77 (operando -> LONG .)
    (               reduce using rule 77 (operando -> LONG .)
    LONG            reduce using rule 77 (operando -> LONG .)
    EXPONENCIAL     reduce using rule 77 (operando -> LONG .)
    LOGARITMICA     reduce using rule 77 (operando -> LONG .)
    SENO            reduce using rule 77 (operando -> LONG .)
    COSENO          reduce using rule 77 (operando -> LONG .)
    FINMIENTRAS     reduce using rule 77 (operando -> LONG .)
    FINSI           reduce using rule 77 (operando -> LONG .)
    SINO            reduce using rule 77 (operando -> LONG .)
    DEVOLVER        reduce using rule 77 (operando -> LONG .)
    }               reduce using rule 77 (operando -> LONG .)
    ,               reduce using rule 77 (operando -> LONG .)


state 35

    (80) operando -> EXPONENCIAL . ( NUMBER )

    (               shift and go to state 78


state 36

    (81) operando -> LOGARITMICA . ( NUMBER )

    (               shift and go to state 79


state 37

    (82) operando -> SENO . ( NUMBER )

    (               shift and go to state 80


state 38

    (83) operando -> COSENO . ( NUMBER )

    (               shift and go to state 81


state 39

    (1) statements -> statement SALTO_LINEA . statements
    (1) statements -> . statement SALTO_LINEA statements
    (2) statements -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    $end            reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    statement                      shift and go to state 2
    statements                     shift and go to state 82
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 40

    (50) logico -> logico condicion . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    restriccion                    shift and go to state 83
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 41

    (58) condicion -> OR .

    NUMBER          reduce using rule 58 (condicion -> OR .)
    CHAR            reduce using rule 58 (condicion -> OR .)
    CIERTO          reduce using rule 58 (condicion -> OR .)
    FALSO           reduce using rule 58 (condicion -> OR .)
    (               reduce using rule 58 (condicion -> OR .)
    +               reduce using rule 58 (condicion -> OR .)
    -               reduce using rule 58 (condicion -> OR .)
    NAME            reduce using rule 58 (condicion -> OR .)
    LONG            reduce using rule 58 (condicion -> OR .)
    EXPONENCIAL     reduce using rule 58 (condicion -> OR .)
    LOGARITMICA     reduce using rule 58 (condicion -> OR .)
    SENO            reduce using rule 58 (condicion -> OR .)
    COSENO          reduce using rule 58 (condicion -> OR .)


state 42

    (59) condicion -> AND .

    NUMBER          reduce using rule 59 (condicion -> AND .)
    CHAR            reduce using rule 59 (condicion -> AND .)
    CIERTO          reduce using rule 59 (condicion -> AND .)
    FALSO           reduce using rule 59 (condicion -> AND .)
    (               reduce using rule 59 (condicion -> AND .)
    +               reduce using rule 59 (condicion -> AND .)
    -               reduce using rule 59 (condicion -> AND .)
    NAME            reduce using rule 59 (condicion -> AND .)
    LONG            reduce using rule 59 (condicion -> AND .)
    EXPONENCIAL     reduce using rule 59 (condicion -> AND .)
    LOGARITMICA     reduce using rule 59 (condicion -> AND .)
    SENO            reduce using rule 59 (condicion -> AND .)
    COSENO          reduce using rule 59 (condicion -> AND .)


state 43

    (60) condicion -> NOT .

    NUMBER          reduce using rule 60 (condicion -> NOT .)
    CHAR            reduce using rule 60 (condicion -> NOT .)
    CIERTO          reduce using rule 60 (condicion -> NOT .)
    FALSO           reduce using rule 60 (condicion -> NOT .)
    (               reduce using rule 60 (condicion -> NOT .)
    +               reduce using rule 60 (condicion -> NOT .)
    -               reduce using rule 60 (condicion -> NOT .)
    NAME            reduce using rule 60 (condicion -> NOT .)
    LONG            reduce using rule 60 (condicion -> NOT .)
    EXPONENCIAL     reduce using rule 60 (condicion -> NOT .)
    LOGARITMICA     reduce using rule 60 (condicion -> NOT .)
    SENO            reduce using rule 60 (condicion -> NOT .)
    COSENO          reduce using rule 60 (condicion -> NOT .)


state 44

    (61) condicion -> ! .

    NUMBER          reduce using rule 61 (condicion -> ! .)
    CHAR            reduce using rule 61 (condicion -> ! .)
    CIERTO          reduce using rule 61 (condicion -> ! .)
    FALSO           reduce using rule 61 (condicion -> ! .)
    (               reduce using rule 61 (condicion -> ! .)
    +               reduce using rule 61 (condicion -> ! .)
    -               reduce using rule 61 (condicion -> ! .)
    NAME            reduce using rule 61 (condicion -> ! .)
    LONG            reduce using rule 61 (condicion -> ! .)
    EXPONENCIAL     reduce using rule 61 (condicion -> ! .)
    LOGARITMICA     reduce using rule 61 (condicion -> ! .)
    SENO            reduce using rule 61 (condicion -> ! .)
    COSENO          reduce using rule 61 (condicion -> ! .)


state 45

    (62) condicion -> & .

    NUMBER          reduce using rule 62 (condicion -> & .)
    CHAR            reduce using rule 62 (condicion -> & .)
    CIERTO          reduce using rule 62 (condicion -> & .)
    FALSO           reduce using rule 62 (condicion -> & .)
    (               reduce using rule 62 (condicion -> & .)
    +               reduce using rule 62 (condicion -> & .)
    -               reduce using rule 62 (condicion -> & .)
    NAME            reduce using rule 62 (condicion -> & .)
    LONG            reduce using rule 62 (condicion -> & .)
    EXPONENCIAL     reduce using rule 62 (condicion -> & .)
    LOGARITMICA     reduce using rule 62 (condicion -> & .)
    SENO            reduce using rule 62 (condicion -> & .)
    COSENO          reduce using rule 62 (condicion -> & .)


state 46

    (63) condicion -> | .

    NUMBER          reduce using rule 63 (condicion -> | .)
    CHAR            reduce using rule 63 (condicion -> | .)
    CIERTO          reduce using rule 63 (condicion -> | .)
    FALSO           reduce using rule 63 (condicion -> | .)
    (               reduce using rule 63 (condicion -> | .)
    +               reduce using rule 63 (condicion -> | .)
    -               reduce using rule 63 (condicion -> | .)
    NAME            reduce using rule 63 (condicion -> | .)
    LONG            reduce using rule 63 (condicion -> | .)
    EXPONENCIAL     reduce using rule 63 (condicion -> | .)
    LOGARITMICA     reduce using rule 63 (condicion -> | .)
    SENO            reduce using rule 63 (condicion -> | .)
    COSENO          reduce using rule 63 (condicion -> | .)


state 47

    (16) asignacion -> tipo NAME . Igualdad logico
    (18) names -> NAME . , names
    (19) names -> NAME .

    Igualdad        shift and go to state 84
    ,               shift and go to state 85
    SALTO_LINEA     reduce using rule 19 (names -> NAME .)
    $end            reduce using rule 19 (names -> NAME .)
    ENTONCES        reduce using rule 19 (names -> NAME .)
    FINMIENTRAS     reduce using rule 19 (names -> NAME .)
    FINSI           reduce using rule 19 (names -> NAME .)
    SINO            reduce using rule 19 (names -> NAME .)
    DEVOLVER        reduce using rule 19 (names -> NAME .)
    }               reduce using rule 19 (names -> NAME .)


state 48

    (13) declaracion -> tipo names .

    SALTO_LINEA     reduce using rule 13 (declaracion -> tipo names .)
    $end            reduce using rule 13 (declaracion -> tipo names .)
    ENTONCES        reduce using rule 13 (declaracion -> tipo names .)
    FINMIENTRAS     reduce using rule 13 (declaracion -> tipo names .)
    FINSI           reduce using rule 13 (declaracion -> tipo names .)
    SINO            reduce using rule 13 (declaracion -> tipo names .)
    DEVOLVER        reduce using rule 13 (declaracion -> tipo names .)
    }               reduce using rule 13 (declaracion -> tipo names .)


state 49

    (29) registros -> NAME NAME .

    SALTO_LINEA     reduce using rule 29 (registros -> NAME NAME .)
    $end            reduce using rule 29 (registros -> NAME NAME .)
    ENTONCES        reduce using rule 29 (registros -> NAME NAME .)
    FINMIENTRAS     reduce using rule 29 (registros -> NAME NAME .)
    FINSI           reduce using rule 29 (registros -> NAME NAME .)
    SINO            reduce using rule 29 (registros -> NAME NAME .)
    DEVOLVER        reduce using rule 29 (registros -> NAME NAME .)
    }               reduce using rule 29 (registros -> NAME NAME .)


state 50

    (17) asignacion -> NAME Igualdad . logico
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 86
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 51

    (27) vectores -> NAME [ . NUMBER ] Igualdad logico
    (75) operando -> NAME [ . NUMBER ]

    NUMBER          shift and go to state 87


state 52

    (28) registros -> NAME . . NAME Igualdad logico
    (76) operando -> NAME . . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NAME            shift and go to state 88
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 89

state 53

    (35) uso_funcion -> NAME ( . argumentos )
    (41) argumentos -> . argumentos , operando
    (42) argumentos -> . operando
    (43) argumentos -> . empty
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME
    (47) empty -> .

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38
    )               reduce using rule 47 (empty -> .)
    ,               reduce using rule 47 (empty -> .)

    argumentos                     shift and go to state 90
    operando                       shift and go to state 91
    empty                          shift and go to state 92

state 54

    (25) tipo -> VECTOR .

    NAME            reduce using rule 25 (tipo -> VECTOR .)
    {               reduce using rule 25 (tipo -> VECTOR .)


state 55

    (14) declaracion -> VECTOR tipo . NAME [ NUMBER ]

    NAME            shift and go to state 93


state 56

    (26) tipo -> NAME .

    NAME            reduce using rule 26 (tipo -> NAME .)
    {               reduce using rule 26 (tipo -> NAME .)


state 57

    (24) tipo -> REGISTRO .

    NAME            reduce using rule 24 (tipo -> REGISTRO .)
    {               reduce using rule 24 (tipo -> REGISTRO .)


state 58

    (15) declaracion -> REGISTRO NAME . { atributos }

    {               shift and go to state 94


state 59

    (34) def_funcion -> FUNCION NAME . ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }

    (               shift and go to state 95


state 60

    (72) operando -> ( expression . )
    (66) expression -> expression . + multiplicador
    (67) expression -> expression . - multiplicador

    )               shift and go to state 96
    +               shift and go to state 72
    -               shift and go to state 73


state 61

    (75) operando -> NAME . [ NUMBER ]
    (76) operando -> NAME . . operando
    (84) operando -> NAME .

    [               shift and go to state 97
    .               shift and go to state 98
    *               reduce using rule 84 (operando -> NAME .)
    /               reduce using rule 84 (operando -> NAME .)
    )               reduce using rule 84 (operando -> NAME .)
    +               reduce using rule 84 (operando -> NAME .)
    -               reduce using rule 84 (operando -> NAME .)
    IgualIgual      reduce using rule 84 (operando -> NAME .)
    MenorIgual      reduce using rule 84 (operando -> NAME .)
    MayorIgual      reduce using rule 84 (operando -> NAME .)
    Igualdad        reduce using rule 84 (operando -> NAME .)
    <               reduce using rule 84 (operando -> NAME .)
    >               reduce using rule 84 (operando -> NAME .)
    OR              reduce using rule 84 (operando -> NAME .)
    AND             reduce using rule 84 (operando -> NAME .)
    NOT             reduce using rule 84 (operando -> NAME .)
    !               reduce using rule 84 (operando -> NAME .)
    &               reduce using rule 84 (operando -> NAME .)
    |               reduce using rule 84 (operando -> NAME .)
    NAME            reduce using rule 84 (operando -> NAME .)
    VECTOR          reduce using rule 84 (operando -> NAME .)
    REGISTRO        reduce using rule 84 (operando -> NAME .)
    FUNCION         reduce using rule 84 (operando -> NAME .)
    SI              reduce using rule 84 (operando -> NAME .)
    MIENTRAS        reduce using rule 84 (operando -> NAME .)
    BOOLEANO        reduce using rule 84 (operando -> NAME .)
    ENTERO          reduce using rule 84 (operando -> NAME .)
    REAL            reduce using rule 84 (operando -> NAME .)
    CARACTER        reduce using rule 84 (operando -> NAME .)
    NUMBER          reduce using rule 84 (operando -> NAME .)
    CHAR            reduce using rule 84 (operando -> NAME .)
    CIERTO          reduce using rule 84 (operando -> NAME .)
    FALSO           reduce using rule 84 (operando -> NAME .)
    (               reduce using rule 84 (operando -> NAME .)
    LONG            reduce using rule 84 (operando -> NAME .)
    EXPONENCIAL     reduce using rule 84 (operando -> NAME .)
    LOGARITMICA     reduce using rule 84 (operando -> NAME .)
    SENO            reduce using rule 84 (operando -> NAME .)
    COSENO          reduce using rule 84 (operando -> NAME .)
    FINMIENTRAS     reduce using rule 84 (operando -> NAME .)
    SALTO_LINEA     reduce using rule 84 (operando -> NAME .)
    $end            reduce using rule 84 (operando -> NAME .)
    ENTONCES        reduce using rule 84 (operando -> NAME .)
    FINSI           reduce using rule 84 (operando -> NAME .)
    SINO            reduce using rule 84 (operando -> NAME .)
    DEVOLVER        reduce using rule 84 (operando -> NAME .)
    }               reduce using rule 84 (operando -> NAME .)
    ,               reduce using rule 84 (operando -> NAME .)


state 62

    (44) condicionales -> SI blq_sentencia . ENTONCES blq_sentencia FINSI
    (45) condicionales -> SI blq_sentencia . ENTONCES blq_sentencia SINO blq_sentencia FINSI

    ENTONCES        shift and go to state 99


state 63

    (39) blq_sentencia -> statement . SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> statement .

    SALTO_LINEA     shift and go to state 100
    ENTONCES        reduce using rule 40 (blq_sentencia -> statement .)
    FINMIENTRAS     reduce using rule 40 (blq_sentencia -> statement .)
    FINSI           reduce using rule 40 (blq_sentencia -> statement .)
    SINO            reduce using rule 40 (blq_sentencia -> statement .)
    DEVOLVER        reduce using rule 40 (blq_sentencia -> statement .)
    }               reduce using rule 40 (blq_sentencia -> statement .)


state 64

    (46) bucles -> MIENTRAS logico . blq_sentencia FINMIENTRAS
    (50) logico -> logico . condicion restriccion
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46
    SALTO_LINEA     reduce using rule 3 (statement -> .)
    FINMIENTRAS     reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 11
    blq_sentencia                  shift and go to state 101
    condicion                      shift and go to state 40
    restriccion                    shift and go to state 21
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    tipo                           shift and go to state 12
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 65

    (48) restriccion -> restriccion comparador . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    expression                     shift and go to state 102
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 66

    (52) comparador -> IgualIgual .

    NUMBER          reduce using rule 52 (comparador -> IgualIgual .)
    CHAR            reduce using rule 52 (comparador -> IgualIgual .)
    CIERTO          reduce using rule 52 (comparador -> IgualIgual .)
    FALSO           reduce using rule 52 (comparador -> IgualIgual .)
    (               reduce using rule 52 (comparador -> IgualIgual .)
    +               reduce using rule 52 (comparador -> IgualIgual .)
    -               reduce using rule 52 (comparador -> IgualIgual .)
    NAME            reduce using rule 52 (comparador -> IgualIgual .)
    LONG            reduce using rule 52 (comparador -> IgualIgual .)
    EXPONENCIAL     reduce using rule 52 (comparador -> IgualIgual .)
    LOGARITMICA     reduce using rule 52 (comparador -> IgualIgual .)
    SENO            reduce using rule 52 (comparador -> IgualIgual .)
    COSENO          reduce using rule 52 (comparador -> IgualIgual .)


state 67

    (53) comparador -> MenorIgual .

    NUMBER          reduce using rule 53 (comparador -> MenorIgual .)
    CHAR            reduce using rule 53 (comparador -> MenorIgual .)
    CIERTO          reduce using rule 53 (comparador -> MenorIgual .)
    FALSO           reduce using rule 53 (comparador -> MenorIgual .)
    (               reduce using rule 53 (comparador -> MenorIgual .)
    +               reduce using rule 53 (comparador -> MenorIgual .)
    -               reduce using rule 53 (comparador -> MenorIgual .)
    NAME            reduce using rule 53 (comparador -> MenorIgual .)
    LONG            reduce using rule 53 (comparador -> MenorIgual .)
    EXPONENCIAL     reduce using rule 53 (comparador -> MenorIgual .)
    LOGARITMICA     reduce using rule 53 (comparador -> MenorIgual .)
    SENO            reduce using rule 53 (comparador -> MenorIgual .)
    COSENO          reduce using rule 53 (comparador -> MenorIgual .)


state 68

    (54) comparador -> MayorIgual .

    NUMBER          reduce using rule 54 (comparador -> MayorIgual .)
    CHAR            reduce using rule 54 (comparador -> MayorIgual .)
    CIERTO          reduce using rule 54 (comparador -> MayorIgual .)
    FALSO           reduce using rule 54 (comparador -> MayorIgual .)
    (               reduce using rule 54 (comparador -> MayorIgual .)
    +               reduce using rule 54 (comparador -> MayorIgual .)
    -               reduce using rule 54 (comparador -> MayorIgual .)
    NAME            reduce using rule 54 (comparador -> MayorIgual .)
    LONG            reduce using rule 54 (comparador -> MayorIgual .)
    EXPONENCIAL     reduce using rule 54 (comparador -> MayorIgual .)
    LOGARITMICA     reduce using rule 54 (comparador -> MayorIgual .)
    SENO            reduce using rule 54 (comparador -> MayorIgual .)
    COSENO          reduce using rule 54 (comparador -> MayorIgual .)


state 69

    (55) comparador -> Igualdad .

    NUMBER          reduce using rule 55 (comparador -> Igualdad .)
    CHAR            reduce using rule 55 (comparador -> Igualdad .)
    CIERTO          reduce using rule 55 (comparador -> Igualdad .)
    FALSO           reduce using rule 55 (comparador -> Igualdad .)
    (               reduce using rule 55 (comparador -> Igualdad .)
    +               reduce using rule 55 (comparador -> Igualdad .)
    -               reduce using rule 55 (comparador -> Igualdad .)
    NAME            reduce using rule 55 (comparador -> Igualdad .)
    LONG            reduce using rule 55 (comparador -> Igualdad .)
    EXPONENCIAL     reduce using rule 55 (comparador -> Igualdad .)
    LOGARITMICA     reduce using rule 55 (comparador -> Igualdad .)
    SENO            reduce using rule 55 (comparador -> Igualdad .)
    COSENO          reduce using rule 55 (comparador -> Igualdad .)


state 70

    (56) comparador -> < .

    NUMBER          reduce using rule 56 (comparador -> < .)
    CHAR            reduce using rule 56 (comparador -> < .)
    CIERTO          reduce using rule 56 (comparador -> < .)
    FALSO           reduce using rule 56 (comparador -> < .)
    (               reduce using rule 56 (comparador -> < .)
    +               reduce using rule 56 (comparador -> < .)
    -               reduce using rule 56 (comparador -> < .)
    NAME            reduce using rule 56 (comparador -> < .)
    LONG            reduce using rule 56 (comparador -> < .)
    EXPONENCIAL     reduce using rule 56 (comparador -> < .)
    LOGARITMICA     reduce using rule 56 (comparador -> < .)
    SENO            reduce using rule 56 (comparador -> < .)
    COSENO          reduce using rule 56 (comparador -> < .)


state 71

    (57) comparador -> > .

    NUMBER          reduce using rule 57 (comparador -> > .)
    CHAR            reduce using rule 57 (comparador -> > .)
    CIERTO          reduce using rule 57 (comparador -> > .)
    FALSO           reduce using rule 57 (comparador -> > .)
    (               reduce using rule 57 (comparador -> > .)
    +               reduce using rule 57 (comparador -> > .)
    -               reduce using rule 57 (comparador -> > .)
    NAME            reduce using rule 57 (comparador -> > .)
    LONG            reduce using rule 57 (comparador -> > .)
    EXPONENCIAL     reduce using rule 57 (comparador -> > .)
    LOGARITMICA     reduce using rule 57 (comparador -> > .)
    SENO            reduce using rule 57 (comparador -> > .)
    COSENO          reduce using rule 57 (comparador -> > .)


state 72

    (66) expression -> expression + . multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    multiplicador                  shift and go to state 103
    operando                       shift and go to state 30

state 73

    (67) expression -> expression - . multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    multiplicador                  shift and go to state 104
    operando                       shift and go to state 30

state 74

    (78) multiplicador -> multiplicador * . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 105

state 75

    (79) multiplicador -> multiplicador / . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 106

state 76

    (73) operando -> + operando .

    *               reduce using rule 73 (operando -> + operando .)
    /               reduce using rule 73 (operando -> + operando .)
    +               reduce using rule 73 (operando -> + operando .)
    -               reduce using rule 73 (operando -> + operando .)
    IgualIgual      reduce using rule 73 (operando -> + operando .)
    MenorIgual      reduce using rule 73 (operando -> + operando .)
    MayorIgual      reduce using rule 73 (operando -> + operando .)
    Igualdad        reduce using rule 73 (operando -> + operando .)
    <               reduce using rule 73 (operando -> + operando .)
    >               reduce using rule 73 (operando -> + operando .)
    OR              reduce using rule 73 (operando -> + operando .)
    AND             reduce using rule 73 (operando -> + operando .)
    NOT             reduce using rule 73 (operando -> + operando .)
    !               reduce using rule 73 (operando -> + operando .)
    &               reduce using rule 73 (operando -> + operando .)
    |               reduce using rule 73 (operando -> + operando .)
    SALTO_LINEA     reduce using rule 73 (operando -> + operando .)
    $end            reduce using rule 73 (operando -> + operando .)
    )               reduce using rule 73 (operando -> + operando .)
    ENTONCES        reduce using rule 73 (operando -> + operando .)
    NAME            reduce using rule 73 (operando -> + operando .)
    VECTOR          reduce using rule 73 (operando -> + operando .)
    REGISTRO        reduce using rule 73 (operando -> + operando .)
    FUNCION         reduce using rule 73 (operando -> + operando .)
    SI              reduce using rule 73 (operando -> + operando .)
    MIENTRAS        reduce using rule 73 (operando -> + operando .)
    BOOLEANO        reduce using rule 73 (operando -> + operando .)
    ENTERO          reduce using rule 73 (operando -> + operando .)
    REAL            reduce using rule 73 (operando -> + operando .)
    CARACTER        reduce using rule 73 (operando -> + operando .)
    NUMBER          reduce using rule 73 (operando -> + operando .)
    CHAR            reduce using rule 73 (operando -> + operando .)
    CIERTO          reduce using rule 73 (operando -> + operando .)
    FALSO           reduce using rule 73 (operando -> + operando .)
    (               reduce using rule 73 (operando -> + operando .)
    LONG            reduce using rule 73 (operando -> + operando .)
    EXPONENCIAL     reduce using rule 73 (operando -> + operando .)
    LOGARITMICA     reduce using rule 73 (operando -> + operando .)
    SENO            reduce using rule 73 (operando -> + operando .)
    COSENO          reduce using rule 73 (operando -> + operando .)
    FINMIENTRAS     reduce using rule 73 (operando -> + operando .)
    FINSI           reduce using rule 73 (operando -> + operando .)
    SINO            reduce using rule 73 (operando -> + operando .)
    DEVOLVER        reduce using rule 73 (operando -> + operando .)
    }               reduce using rule 73 (operando -> + operando .)
    ,               reduce using rule 73 (operando -> + operando .)


state 77

    (74) operando -> - operando .

    *               reduce using rule 74 (operando -> - operando .)
    /               reduce using rule 74 (operando -> - operando .)
    +               reduce using rule 74 (operando -> - operando .)
    -               reduce using rule 74 (operando -> - operando .)
    IgualIgual      reduce using rule 74 (operando -> - operando .)
    MenorIgual      reduce using rule 74 (operando -> - operando .)
    MayorIgual      reduce using rule 74 (operando -> - operando .)
    Igualdad        reduce using rule 74 (operando -> - operando .)
    <               reduce using rule 74 (operando -> - operando .)
    >               reduce using rule 74 (operando -> - operando .)
    OR              reduce using rule 74 (operando -> - operando .)
    AND             reduce using rule 74 (operando -> - operando .)
    NOT             reduce using rule 74 (operando -> - operando .)
    !               reduce using rule 74 (operando -> - operando .)
    &               reduce using rule 74 (operando -> - operando .)
    |               reduce using rule 74 (operando -> - operando .)
    SALTO_LINEA     reduce using rule 74 (operando -> - operando .)
    $end            reduce using rule 74 (operando -> - operando .)
    )               reduce using rule 74 (operando -> - operando .)
    ENTONCES        reduce using rule 74 (operando -> - operando .)
    NAME            reduce using rule 74 (operando -> - operando .)
    VECTOR          reduce using rule 74 (operando -> - operando .)
    REGISTRO        reduce using rule 74 (operando -> - operando .)
    FUNCION         reduce using rule 74 (operando -> - operando .)
    SI              reduce using rule 74 (operando -> - operando .)
    MIENTRAS        reduce using rule 74 (operando -> - operando .)
    BOOLEANO        reduce using rule 74 (operando -> - operando .)
    ENTERO          reduce using rule 74 (operando -> - operando .)
    REAL            reduce using rule 74 (operando -> - operando .)
    CARACTER        reduce using rule 74 (operando -> - operando .)
    NUMBER          reduce using rule 74 (operando -> - operando .)
    CHAR            reduce using rule 74 (operando -> - operando .)
    CIERTO          reduce using rule 74 (operando -> - operando .)
    FALSO           reduce using rule 74 (operando -> - operando .)
    (               reduce using rule 74 (operando -> - operando .)
    LONG            reduce using rule 74 (operando -> - operando .)
    EXPONENCIAL     reduce using rule 74 (operando -> - operando .)
    LOGARITMICA     reduce using rule 74 (operando -> - operando .)
    SENO            reduce using rule 74 (operando -> - operando .)
    COSENO          reduce using rule 74 (operando -> - operando .)
    FINMIENTRAS     reduce using rule 74 (operando -> - operando .)
    FINSI           reduce using rule 74 (operando -> - operando .)
    SINO            reduce using rule 74 (operando -> - operando .)
    DEVOLVER        reduce using rule 74 (operando -> - operando .)
    }               reduce using rule 74 (operando -> - operando .)
    ,               reduce using rule 74 (operando -> - operando .)


state 78

    (80) operando -> EXPONENCIAL ( . NUMBER )

    NUMBER          shift and go to state 107


state 79

    (81) operando -> LOGARITMICA ( . NUMBER )

    NUMBER          shift and go to state 108


state 80

    (82) operando -> SENO ( . NUMBER )

    NUMBER          shift and go to state 109


state 81

    (83) operando -> COSENO ( . NUMBER )

    NUMBER          shift and go to state 110


state 82

    (1) statements -> statement SALTO_LINEA statements .

    $end            reduce using rule 1 (statements -> statement SALTO_LINEA statements .)


state 83

    (50) logico -> logico condicion restriccion .
    (48) restriccion -> restriccion . comparador expression
    (52) comparador -> . IgualIgual
    (53) comparador -> . MenorIgual
    (54) comparador -> . MayorIgual
    (55) comparador -> . Igualdad
    (56) comparador -> . <
    (57) comparador -> . >

    OR              reduce using rule 50 (logico -> logico condicion restriccion .)
    AND             reduce using rule 50 (logico -> logico condicion restriccion .)
    NOT             reduce using rule 50 (logico -> logico condicion restriccion .)
    !               reduce using rule 50 (logico -> logico condicion restriccion .)
    &               reduce using rule 50 (logico -> logico condicion restriccion .)
    |               reduce using rule 50 (logico -> logico condicion restriccion .)
    SALTO_LINEA     reduce using rule 50 (logico -> logico condicion restriccion .)
    $end            reduce using rule 50 (logico -> logico condicion restriccion .)
    ENTONCES        reduce using rule 50 (logico -> logico condicion restriccion .)
    NAME            reduce using rule 50 (logico -> logico condicion restriccion .)
    VECTOR          reduce using rule 50 (logico -> logico condicion restriccion .)
    REGISTRO        reduce using rule 50 (logico -> logico condicion restriccion .)
    FUNCION         reduce using rule 50 (logico -> logico condicion restriccion .)
    SI              reduce using rule 50 (logico -> logico condicion restriccion .)
    MIENTRAS        reduce using rule 50 (logico -> logico condicion restriccion .)
    BOOLEANO        reduce using rule 50 (logico -> logico condicion restriccion .)
    ENTERO          reduce using rule 50 (logico -> logico condicion restriccion .)
    REAL            reduce using rule 50 (logico -> logico condicion restriccion .)
    CARACTER        reduce using rule 50 (logico -> logico condicion restriccion .)
    NUMBER          reduce using rule 50 (logico -> logico condicion restriccion .)
    CHAR            reduce using rule 50 (logico -> logico condicion restriccion .)
    CIERTO          reduce using rule 50 (logico -> logico condicion restriccion .)
    FALSO           reduce using rule 50 (logico -> logico condicion restriccion .)
    (               reduce using rule 50 (logico -> logico condicion restriccion .)
    +               reduce using rule 50 (logico -> logico condicion restriccion .)
    -               reduce using rule 50 (logico -> logico condicion restriccion .)
    LONG            reduce using rule 50 (logico -> logico condicion restriccion .)
    EXPONENCIAL     reduce using rule 50 (logico -> logico condicion restriccion .)
    LOGARITMICA     reduce using rule 50 (logico -> logico condicion restriccion .)
    SENO            reduce using rule 50 (logico -> logico condicion restriccion .)
    COSENO          reduce using rule 50 (logico -> logico condicion restriccion .)
    FINMIENTRAS     reduce using rule 50 (logico -> logico condicion restriccion .)
    FINSI           reduce using rule 50 (logico -> logico condicion restriccion .)
    SINO            reduce using rule 50 (logico -> logico condicion restriccion .)
    DEVOLVER        reduce using rule 50 (logico -> logico condicion restriccion .)
    }               reduce using rule 50 (logico -> logico condicion restriccion .)
    IgualIgual      shift and go to state 66
    MenorIgual      shift and go to state 67
    MayorIgual      shift and go to state 68
    Igualdad        shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71

    comparador                     shift and go to state 65

state 84

    (16) asignacion -> tipo NAME Igualdad . logico
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 111
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 85

    (18) names -> NAME , . names
    (18) names -> . NAME , names
    (19) names -> . NAME

    NAME            shift and go to state 112

    names                          shift and go to state 113

state 86

    (17) asignacion -> NAME Igualdad logico .
    (50) logico -> logico . condicion restriccion
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |

    SALTO_LINEA     reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    $end            reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    ENTONCES        reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    FINMIENTRAS     reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    FINSI           reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    SINO            reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    DEVOLVER        reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    }               reduce using rule 17 (asignacion -> NAME Igualdad logico .)
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46

    condicion                      shift and go to state 40

state 87

    (27) vectores -> NAME [ NUMBER . ] Igualdad logico
    (75) operando -> NAME [ NUMBER . ]

    ]               shift and go to state 114


state 88

    (28) registros -> NAME . NAME . Igualdad logico
    (75) operando -> NAME . [ NUMBER ]
    (76) operando -> NAME . . operando
    (84) operando -> NAME .

  ! shift/reduce conflict for Igualdad resolved as shift
    Igualdad        shift and go to state 115
    [               shift and go to state 97
    .               shift and go to state 98
    *               reduce using rule 84 (operando -> NAME .)
    /               reduce using rule 84 (operando -> NAME .)
    +               reduce using rule 84 (operando -> NAME .)
    -               reduce using rule 84 (operando -> NAME .)
    IgualIgual      reduce using rule 84 (operando -> NAME .)
    MenorIgual      reduce using rule 84 (operando -> NAME .)
    MayorIgual      reduce using rule 84 (operando -> NAME .)
    <               reduce using rule 84 (operando -> NAME .)
    >               reduce using rule 84 (operando -> NAME .)
    OR              reduce using rule 84 (operando -> NAME .)
    AND             reduce using rule 84 (operando -> NAME .)
    NOT             reduce using rule 84 (operando -> NAME .)
    !               reduce using rule 84 (operando -> NAME .)
    &               reduce using rule 84 (operando -> NAME .)
    |               reduce using rule 84 (operando -> NAME .)
    SALTO_LINEA     reduce using rule 84 (operando -> NAME .)
    $end            reduce using rule 84 (operando -> NAME .)
    ENTONCES        reduce using rule 84 (operando -> NAME .)
    FINMIENTRAS     reduce using rule 84 (operando -> NAME .)
    FINSI           reduce using rule 84 (operando -> NAME .)
    SINO            reduce using rule 84 (operando -> NAME .)
    DEVOLVER        reduce using rule 84 (operando -> NAME .)
    }               reduce using rule 84 (operando -> NAME .)

  ! Igualdad        [ reduce using rule 84 (operando -> NAME .) ]


state 89

    (76) operando -> NAME . operando .

    *               reduce using rule 76 (operando -> NAME . operando .)
    /               reduce using rule 76 (operando -> NAME . operando .)
    +               reduce using rule 76 (operando -> NAME . operando .)
    -               reduce using rule 76 (operando -> NAME . operando .)
    IgualIgual      reduce using rule 76 (operando -> NAME . operando .)
    MenorIgual      reduce using rule 76 (operando -> NAME . operando .)
    MayorIgual      reduce using rule 76 (operando -> NAME . operando .)
    Igualdad        reduce using rule 76 (operando -> NAME . operando .)
    <               reduce using rule 76 (operando -> NAME . operando .)
    >               reduce using rule 76 (operando -> NAME . operando .)
    OR              reduce using rule 76 (operando -> NAME . operando .)
    AND             reduce using rule 76 (operando -> NAME . operando .)
    NOT             reduce using rule 76 (operando -> NAME . operando .)
    !               reduce using rule 76 (operando -> NAME . operando .)
    &               reduce using rule 76 (operando -> NAME . operando .)
    |               reduce using rule 76 (operando -> NAME . operando .)
    SALTO_LINEA     reduce using rule 76 (operando -> NAME . operando .)
    $end            reduce using rule 76 (operando -> NAME . operando .)
    )               reduce using rule 76 (operando -> NAME . operando .)
    ENTONCES        reduce using rule 76 (operando -> NAME . operando .)
    NAME            reduce using rule 76 (operando -> NAME . operando .)
    VECTOR          reduce using rule 76 (operando -> NAME . operando .)
    REGISTRO        reduce using rule 76 (operando -> NAME . operando .)
    FUNCION         reduce using rule 76 (operando -> NAME . operando .)
    SI              reduce using rule 76 (operando -> NAME . operando .)
    MIENTRAS        reduce using rule 76 (operando -> NAME . operando .)
    BOOLEANO        reduce using rule 76 (operando -> NAME . operando .)
    ENTERO          reduce using rule 76 (operando -> NAME . operando .)
    REAL            reduce using rule 76 (operando -> NAME . operando .)
    CARACTER        reduce using rule 76 (operando -> NAME . operando .)
    NUMBER          reduce using rule 76 (operando -> NAME . operando .)
    CHAR            reduce using rule 76 (operando -> NAME . operando .)
    CIERTO          reduce using rule 76 (operando -> NAME . operando .)
    FALSO           reduce using rule 76 (operando -> NAME . operando .)
    (               reduce using rule 76 (operando -> NAME . operando .)
    LONG            reduce using rule 76 (operando -> NAME . operando .)
    EXPONENCIAL     reduce using rule 76 (operando -> NAME . operando .)
    LOGARITMICA     reduce using rule 76 (operando -> NAME . operando .)
    SENO            reduce using rule 76 (operando -> NAME . operando .)
    COSENO          reduce using rule 76 (operando -> NAME . operando .)
    FINMIENTRAS     reduce using rule 76 (operando -> NAME . operando .)
    FINSI           reduce using rule 76 (operando -> NAME . operando .)
    SINO            reduce using rule 76 (operando -> NAME . operando .)
    DEVOLVER        reduce using rule 76 (operando -> NAME . operando .)
    }               reduce using rule 76 (operando -> NAME . operando .)
    ,               reduce using rule 76 (operando -> NAME . operando .)


state 90

    (35) uso_funcion -> NAME ( argumentos . )
    (41) argumentos -> argumentos . , operando

    )               shift and go to state 116
    ,               shift and go to state 117


state 91

    (42) argumentos -> operando .

    )               reduce using rule 42 (argumentos -> operando .)
    ,               reduce using rule 42 (argumentos -> operando .)


state 92

    (43) argumentos -> empty .

    )               reduce using rule 43 (argumentos -> empty .)
    ,               reduce using rule 43 (argumentos -> empty .)


state 93

    (14) declaracion -> VECTOR tipo NAME . [ NUMBER ]

    [               shift and go to state 118


state 94

    (15) declaracion -> REGISTRO NAME { . atributos }
    (30) atributos -> . tipo campos ; atributos
    (31) atributos -> . tipo campos ;
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME

    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56

    atributos                      shift and go to state 119
    tipo                           shift and go to state 120

state 95

    (34) def_funcion -> FUNCION NAME ( . list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (36) list_args -> . tipo NAME , list_args
    (37) list_args -> . tipo NAME
    (38) list_args -> . empty
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (47) empty -> .

    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56
    )               reduce using rule 47 (empty -> .)

    list_args                      shift and go to state 121
    tipo                           shift and go to state 122
    empty                          shift and go to state 123

state 96

    (72) operando -> ( expression ) .

    *               reduce using rule 72 (operando -> ( expression ) .)
    /               reduce using rule 72 (operando -> ( expression ) .)
    +               reduce using rule 72 (operando -> ( expression ) .)
    -               reduce using rule 72 (operando -> ( expression ) .)
    IgualIgual      reduce using rule 72 (operando -> ( expression ) .)
    MenorIgual      reduce using rule 72 (operando -> ( expression ) .)
    MayorIgual      reduce using rule 72 (operando -> ( expression ) .)
    Igualdad        reduce using rule 72 (operando -> ( expression ) .)
    <               reduce using rule 72 (operando -> ( expression ) .)
    >               reduce using rule 72 (operando -> ( expression ) .)
    OR              reduce using rule 72 (operando -> ( expression ) .)
    AND             reduce using rule 72 (operando -> ( expression ) .)
    NOT             reduce using rule 72 (operando -> ( expression ) .)
    !               reduce using rule 72 (operando -> ( expression ) .)
    &               reduce using rule 72 (operando -> ( expression ) .)
    |               reduce using rule 72 (operando -> ( expression ) .)
    SALTO_LINEA     reduce using rule 72 (operando -> ( expression ) .)
    $end            reduce using rule 72 (operando -> ( expression ) .)
    )               reduce using rule 72 (operando -> ( expression ) .)
    ENTONCES        reduce using rule 72 (operando -> ( expression ) .)
    NAME            reduce using rule 72 (operando -> ( expression ) .)
    VECTOR          reduce using rule 72 (operando -> ( expression ) .)
    REGISTRO        reduce using rule 72 (operando -> ( expression ) .)
    FUNCION         reduce using rule 72 (operando -> ( expression ) .)
    SI              reduce using rule 72 (operando -> ( expression ) .)
    MIENTRAS        reduce using rule 72 (operando -> ( expression ) .)
    BOOLEANO        reduce using rule 72 (operando -> ( expression ) .)
    ENTERO          reduce using rule 72 (operando -> ( expression ) .)
    REAL            reduce using rule 72 (operando -> ( expression ) .)
    CARACTER        reduce using rule 72 (operando -> ( expression ) .)
    NUMBER          reduce using rule 72 (operando -> ( expression ) .)
    CHAR            reduce using rule 72 (operando -> ( expression ) .)
    CIERTO          reduce using rule 72 (operando -> ( expression ) .)
    FALSO           reduce using rule 72 (operando -> ( expression ) .)
    (               reduce using rule 72 (operando -> ( expression ) .)
    LONG            reduce using rule 72 (operando -> ( expression ) .)
    EXPONENCIAL     reduce using rule 72 (operando -> ( expression ) .)
    LOGARITMICA     reduce using rule 72 (operando -> ( expression ) .)
    SENO            reduce using rule 72 (operando -> ( expression ) .)
    COSENO          reduce using rule 72 (operando -> ( expression ) .)
    FINMIENTRAS     reduce using rule 72 (operando -> ( expression ) .)
    FINSI           reduce using rule 72 (operando -> ( expression ) .)
    SINO            reduce using rule 72 (operando -> ( expression ) .)
    DEVOLVER        reduce using rule 72 (operando -> ( expression ) .)
    }               reduce using rule 72 (operando -> ( expression ) .)
    ,               reduce using rule 72 (operando -> ( expression ) .)


state 97

    (75) operando -> NAME [ . NUMBER ]

    NUMBER          shift and go to state 124


state 98

    (76) operando -> NAME . . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 89

state 99

    (44) condicionales -> SI blq_sentencia ENTONCES . blq_sentencia FINSI
    (45) condicionales -> SI blq_sentencia ENTONCES . blq_sentencia SINO blq_sentencia FINSI
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    FINSI           reduce using rule 3 (statement -> .)
    SINO            reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    blq_sentencia                  shift and go to state 125
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 100

    (39) blq_sentencia -> statement SALTO_LINEA . blq_sentencia
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    ENTONCES        reduce using rule 3 (statement -> .)
    FINMIENTRAS     reduce using rule 3 (statement -> .)
    FINSI           reduce using rule 3 (statement -> .)
    SINO            reduce using rule 3 (statement -> .)
    DEVOLVER        reduce using rule 3 (statement -> .)
    }               reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    statement                      shift and go to state 63
    blq_sentencia                  shift and go to state 126
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 101

    (46) bucles -> MIENTRAS logico blq_sentencia . FINMIENTRAS

    FINMIENTRAS     shift and go to state 127


state 102

    (48) restriccion -> restriccion comparador expression .
    (66) expression -> expression . + multiplicador
    (67) expression -> expression . - multiplicador

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    IgualIgual      reduce using rule 48 (restriccion -> restriccion comparador expression .)
    MenorIgual      reduce using rule 48 (restriccion -> restriccion comparador expression .)
    MayorIgual      reduce using rule 48 (restriccion -> restriccion comparador expression .)
    Igualdad        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    <               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    >               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    OR              reduce using rule 48 (restriccion -> restriccion comparador expression .)
    AND             reduce using rule 48 (restriccion -> restriccion comparador expression .)
    NOT             reduce using rule 48 (restriccion -> restriccion comparador expression .)
    !               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    &               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    |               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    SALTO_LINEA     reduce using rule 48 (restriccion -> restriccion comparador expression .)
    $end            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    ENTONCES        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    NAME            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    VECTOR          reduce using rule 48 (restriccion -> restriccion comparador expression .)
    REGISTRO        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    FUNCION         reduce using rule 48 (restriccion -> restriccion comparador expression .)
    SI              reduce using rule 48 (restriccion -> restriccion comparador expression .)
    MIENTRAS        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    BOOLEANO        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    ENTERO          reduce using rule 48 (restriccion -> restriccion comparador expression .)
    REAL            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    CARACTER        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    NUMBER          reduce using rule 48 (restriccion -> restriccion comparador expression .)
    CHAR            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    CIERTO          reduce using rule 48 (restriccion -> restriccion comparador expression .)
    FALSO           reduce using rule 48 (restriccion -> restriccion comparador expression .)
    (               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    LONG            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    EXPONENCIAL     reduce using rule 48 (restriccion -> restriccion comparador expression .)
    LOGARITMICA     reduce using rule 48 (restriccion -> restriccion comparador expression .)
    SENO            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    COSENO          reduce using rule 48 (restriccion -> restriccion comparador expression .)
    FINMIENTRAS     reduce using rule 48 (restriccion -> restriccion comparador expression .)
    FINSI           reduce using rule 48 (restriccion -> restriccion comparador expression .)
    SINO            reduce using rule 48 (restriccion -> restriccion comparador expression .)
    DEVOLVER        reduce using rule 48 (restriccion -> restriccion comparador expression .)
    }               reduce using rule 48 (restriccion -> restriccion comparador expression .)
    +               shift and go to state 72
    -               shift and go to state 73

  ! +               [ reduce using rule 48 (restriccion -> restriccion comparador expression .) ]
  ! -               [ reduce using rule 48 (restriccion -> restriccion comparador expression .) ]


state 103

    (66) expression -> expression + multiplicador .
    (78) multiplicador -> multiplicador . * operando
    (79) multiplicador -> multiplicador . / operando

    +               reduce using rule 66 (expression -> expression + multiplicador .)
    -               reduce using rule 66 (expression -> expression + multiplicador .)
    IgualIgual      reduce using rule 66 (expression -> expression + multiplicador .)
    MenorIgual      reduce using rule 66 (expression -> expression + multiplicador .)
    MayorIgual      reduce using rule 66 (expression -> expression + multiplicador .)
    Igualdad        reduce using rule 66 (expression -> expression + multiplicador .)
    <               reduce using rule 66 (expression -> expression + multiplicador .)
    >               reduce using rule 66 (expression -> expression + multiplicador .)
    OR              reduce using rule 66 (expression -> expression + multiplicador .)
    AND             reduce using rule 66 (expression -> expression + multiplicador .)
    NOT             reduce using rule 66 (expression -> expression + multiplicador .)
    !               reduce using rule 66 (expression -> expression + multiplicador .)
    &               reduce using rule 66 (expression -> expression + multiplicador .)
    |               reduce using rule 66 (expression -> expression + multiplicador .)
    SALTO_LINEA     reduce using rule 66 (expression -> expression + multiplicador .)
    $end            reduce using rule 66 (expression -> expression + multiplicador .)
    )               reduce using rule 66 (expression -> expression + multiplicador .)
    ENTONCES        reduce using rule 66 (expression -> expression + multiplicador .)
    NAME            reduce using rule 66 (expression -> expression + multiplicador .)
    VECTOR          reduce using rule 66 (expression -> expression + multiplicador .)
    REGISTRO        reduce using rule 66 (expression -> expression + multiplicador .)
    FUNCION         reduce using rule 66 (expression -> expression + multiplicador .)
    SI              reduce using rule 66 (expression -> expression + multiplicador .)
    MIENTRAS        reduce using rule 66 (expression -> expression + multiplicador .)
    BOOLEANO        reduce using rule 66 (expression -> expression + multiplicador .)
    ENTERO          reduce using rule 66 (expression -> expression + multiplicador .)
    REAL            reduce using rule 66 (expression -> expression + multiplicador .)
    CARACTER        reduce using rule 66 (expression -> expression + multiplicador .)
    NUMBER          reduce using rule 66 (expression -> expression + multiplicador .)
    CHAR            reduce using rule 66 (expression -> expression + multiplicador .)
    CIERTO          reduce using rule 66 (expression -> expression + multiplicador .)
    FALSO           reduce using rule 66 (expression -> expression + multiplicador .)
    (               reduce using rule 66 (expression -> expression + multiplicador .)
    LONG            reduce using rule 66 (expression -> expression + multiplicador .)
    EXPONENCIAL     reduce using rule 66 (expression -> expression + multiplicador .)
    LOGARITMICA     reduce using rule 66 (expression -> expression + multiplicador .)
    SENO            reduce using rule 66 (expression -> expression + multiplicador .)
    COSENO          reduce using rule 66 (expression -> expression + multiplicador .)
    FINMIENTRAS     reduce using rule 66 (expression -> expression + multiplicador .)
    FINSI           reduce using rule 66 (expression -> expression + multiplicador .)
    SINO            reduce using rule 66 (expression -> expression + multiplicador .)
    DEVOLVER        reduce using rule 66 (expression -> expression + multiplicador .)
    }               reduce using rule 66 (expression -> expression + multiplicador .)
    *               shift and go to state 74
    /               shift and go to state 75


state 104

    (67) expression -> expression - multiplicador .
    (78) multiplicador -> multiplicador . * operando
    (79) multiplicador -> multiplicador . / operando

    +               reduce using rule 67 (expression -> expression - multiplicador .)
    -               reduce using rule 67 (expression -> expression - multiplicador .)
    IgualIgual      reduce using rule 67 (expression -> expression - multiplicador .)
    MenorIgual      reduce using rule 67 (expression -> expression - multiplicador .)
    MayorIgual      reduce using rule 67 (expression -> expression - multiplicador .)
    Igualdad        reduce using rule 67 (expression -> expression - multiplicador .)
    <               reduce using rule 67 (expression -> expression - multiplicador .)
    >               reduce using rule 67 (expression -> expression - multiplicador .)
    OR              reduce using rule 67 (expression -> expression - multiplicador .)
    AND             reduce using rule 67 (expression -> expression - multiplicador .)
    NOT             reduce using rule 67 (expression -> expression - multiplicador .)
    !               reduce using rule 67 (expression -> expression - multiplicador .)
    &               reduce using rule 67 (expression -> expression - multiplicador .)
    |               reduce using rule 67 (expression -> expression - multiplicador .)
    SALTO_LINEA     reduce using rule 67 (expression -> expression - multiplicador .)
    $end            reduce using rule 67 (expression -> expression - multiplicador .)
    )               reduce using rule 67 (expression -> expression - multiplicador .)
    ENTONCES        reduce using rule 67 (expression -> expression - multiplicador .)
    NAME            reduce using rule 67 (expression -> expression - multiplicador .)
    VECTOR          reduce using rule 67 (expression -> expression - multiplicador .)
    REGISTRO        reduce using rule 67 (expression -> expression - multiplicador .)
    FUNCION         reduce using rule 67 (expression -> expression - multiplicador .)
    SI              reduce using rule 67 (expression -> expression - multiplicador .)
    MIENTRAS        reduce using rule 67 (expression -> expression - multiplicador .)
    BOOLEANO        reduce using rule 67 (expression -> expression - multiplicador .)
    ENTERO          reduce using rule 67 (expression -> expression - multiplicador .)
    REAL            reduce using rule 67 (expression -> expression - multiplicador .)
    CARACTER        reduce using rule 67 (expression -> expression - multiplicador .)
    NUMBER          reduce using rule 67 (expression -> expression - multiplicador .)
    CHAR            reduce using rule 67 (expression -> expression - multiplicador .)
    CIERTO          reduce using rule 67 (expression -> expression - multiplicador .)
    FALSO           reduce using rule 67 (expression -> expression - multiplicador .)
    (               reduce using rule 67 (expression -> expression - multiplicador .)
    LONG            reduce using rule 67 (expression -> expression - multiplicador .)
    EXPONENCIAL     reduce using rule 67 (expression -> expression - multiplicador .)
    LOGARITMICA     reduce using rule 67 (expression -> expression - multiplicador .)
    SENO            reduce using rule 67 (expression -> expression - multiplicador .)
    COSENO          reduce using rule 67 (expression -> expression - multiplicador .)
    FINMIENTRAS     reduce using rule 67 (expression -> expression - multiplicador .)
    FINSI           reduce using rule 67 (expression -> expression - multiplicador .)
    SINO            reduce using rule 67 (expression -> expression - multiplicador .)
    DEVOLVER        reduce using rule 67 (expression -> expression - multiplicador .)
    }               reduce using rule 67 (expression -> expression - multiplicador .)
    *               shift and go to state 74
    /               shift and go to state 75


state 105

    (78) multiplicador -> multiplicador * operando .

    *               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    /               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    +               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    -               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    IgualIgual      reduce using rule 78 (multiplicador -> multiplicador * operando .)
    MenorIgual      reduce using rule 78 (multiplicador -> multiplicador * operando .)
    MayorIgual      reduce using rule 78 (multiplicador -> multiplicador * operando .)
    Igualdad        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    <               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    >               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    OR              reduce using rule 78 (multiplicador -> multiplicador * operando .)
    AND             reduce using rule 78 (multiplicador -> multiplicador * operando .)
    NOT             reduce using rule 78 (multiplicador -> multiplicador * operando .)
    !               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    &               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    |               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    SALTO_LINEA     reduce using rule 78 (multiplicador -> multiplicador * operando .)
    $end            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    )               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    ENTONCES        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    NAME            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    VECTOR          reduce using rule 78 (multiplicador -> multiplicador * operando .)
    REGISTRO        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    FUNCION         reduce using rule 78 (multiplicador -> multiplicador * operando .)
    SI              reduce using rule 78 (multiplicador -> multiplicador * operando .)
    MIENTRAS        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    BOOLEANO        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    ENTERO          reduce using rule 78 (multiplicador -> multiplicador * operando .)
    REAL            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    CARACTER        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    NUMBER          reduce using rule 78 (multiplicador -> multiplicador * operando .)
    CHAR            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    CIERTO          reduce using rule 78 (multiplicador -> multiplicador * operando .)
    FALSO           reduce using rule 78 (multiplicador -> multiplicador * operando .)
    (               reduce using rule 78 (multiplicador -> multiplicador * operando .)
    LONG            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    EXPONENCIAL     reduce using rule 78 (multiplicador -> multiplicador * operando .)
    LOGARITMICA     reduce using rule 78 (multiplicador -> multiplicador * operando .)
    SENO            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    COSENO          reduce using rule 78 (multiplicador -> multiplicador * operando .)
    FINMIENTRAS     reduce using rule 78 (multiplicador -> multiplicador * operando .)
    FINSI           reduce using rule 78 (multiplicador -> multiplicador * operando .)
    SINO            reduce using rule 78 (multiplicador -> multiplicador * operando .)
    DEVOLVER        reduce using rule 78 (multiplicador -> multiplicador * operando .)
    }               reduce using rule 78 (multiplicador -> multiplicador * operando .)


state 106

    (79) multiplicador -> multiplicador / operando .

    *               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    /               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    +               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    -               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    IgualIgual      reduce using rule 79 (multiplicador -> multiplicador / operando .)
    MenorIgual      reduce using rule 79 (multiplicador -> multiplicador / operando .)
    MayorIgual      reduce using rule 79 (multiplicador -> multiplicador / operando .)
    Igualdad        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    <               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    >               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    OR              reduce using rule 79 (multiplicador -> multiplicador / operando .)
    AND             reduce using rule 79 (multiplicador -> multiplicador / operando .)
    NOT             reduce using rule 79 (multiplicador -> multiplicador / operando .)
    !               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    &               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    |               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    SALTO_LINEA     reduce using rule 79 (multiplicador -> multiplicador / operando .)
    $end            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    )               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    ENTONCES        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    NAME            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    VECTOR          reduce using rule 79 (multiplicador -> multiplicador / operando .)
    REGISTRO        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    FUNCION         reduce using rule 79 (multiplicador -> multiplicador / operando .)
    SI              reduce using rule 79 (multiplicador -> multiplicador / operando .)
    MIENTRAS        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    BOOLEANO        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    ENTERO          reduce using rule 79 (multiplicador -> multiplicador / operando .)
    REAL            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    CARACTER        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    NUMBER          reduce using rule 79 (multiplicador -> multiplicador / operando .)
    CHAR            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    CIERTO          reduce using rule 79 (multiplicador -> multiplicador / operando .)
    FALSO           reduce using rule 79 (multiplicador -> multiplicador / operando .)
    (               reduce using rule 79 (multiplicador -> multiplicador / operando .)
    LONG            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    EXPONENCIAL     reduce using rule 79 (multiplicador -> multiplicador / operando .)
    LOGARITMICA     reduce using rule 79 (multiplicador -> multiplicador / operando .)
    SENO            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    COSENO          reduce using rule 79 (multiplicador -> multiplicador / operando .)
    FINMIENTRAS     reduce using rule 79 (multiplicador -> multiplicador / operando .)
    FINSI           reduce using rule 79 (multiplicador -> multiplicador / operando .)
    SINO            reduce using rule 79 (multiplicador -> multiplicador / operando .)
    DEVOLVER        reduce using rule 79 (multiplicador -> multiplicador / operando .)
    }               reduce using rule 79 (multiplicador -> multiplicador / operando .)


state 107

    (80) operando -> EXPONENCIAL ( NUMBER . )

    )               shift and go to state 128


state 108

    (81) operando -> LOGARITMICA ( NUMBER . )

    )               shift and go to state 129


state 109

    (82) operando -> SENO ( NUMBER . )

    )               shift and go to state 130


state 110

    (83) operando -> COSENO ( NUMBER . )

    )               shift and go to state 131


state 111

    (16) asignacion -> tipo NAME Igualdad logico .
    (50) logico -> logico . condicion restriccion
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |

    SALTO_LINEA     reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    $end            reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    ENTONCES        reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    FINMIENTRAS     reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    FINSI           reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    SINO            reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    DEVOLVER        reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    }               reduce using rule 16 (asignacion -> tipo NAME Igualdad logico .)
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46

    condicion                      shift and go to state 40

state 112

    (18) names -> NAME . , names
    (19) names -> NAME .

    ,               shift and go to state 85
    SALTO_LINEA     reduce using rule 19 (names -> NAME .)
    $end            reduce using rule 19 (names -> NAME .)
    ENTONCES        reduce using rule 19 (names -> NAME .)
    FINMIENTRAS     reduce using rule 19 (names -> NAME .)
    FINSI           reduce using rule 19 (names -> NAME .)
    SINO            reduce using rule 19 (names -> NAME .)
    DEVOLVER        reduce using rule 19 (names -> NAME .)
    }               reduce using rule 19 (names -> NAME .)


state 113

    (18) names -> NAME , names .

    SALTO_LINEA     reduce using rule 18 (names -> NAME , names .)
    $end            reduce using rule 18 (names -> NAME , names .)
    ENTONCES        reduce using rule 18 (names -> NAME , names .)
    FINMIENTRAS     reduce using rule 18 (names -> NAME , names .)
    FINSI           reduce using rule 18 (names -> NAME , names .)
    SINO            reduce using rule 18 (names -> NAME , names .)
    DEVOLVER        reduce using rule 18 (names -> NAME , names .)
    }               reduce using rule 18 (names -> NAME , names .)


state 114

    (27) vectores -> NAME [ NUMBER ] . Igualdad logico
    (75) operando -> NAME [ NUMBER ] .

  ! shift/reduce conflict for Igualdad resolved as shift
    Igualdad        shift and go to state 132
    *               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    /               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    +               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    -               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    IgualIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    MenorIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    MayorIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    <               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    >               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    OR              reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    AND             reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    NOT             reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    !               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    &               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    |               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SALTO_LINEA     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    $end            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    ENTONCES        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FINMIENTRAS     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FINSI           reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SINO            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    DEVOLVER        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    }               reduce using rule 75 (operando -> NAME [ NUMBER ] .)

  ! Igualdad        [ reduce using rule 75 (operando -> NAME [ NUMBER ] .) ]


state 115

    (28) registros -> NAME . NAME Igualdad . logico
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 133
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 116

    (35) uso_funcion -> NAME ( argumentos ) .

    SALTO_LINEA     reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    $end            reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    ENTONCES        reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    FINMIENTRAS     reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    FINSI           reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    SINO            reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    DEVOLVER        reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)
    }               reduce using rule 35 (uso_funcion -> NAME ( argumentos ) .)


state 117

    (41) argumentos -> argumentos , . operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    operando                       shift and go to state 134

state 118

    (14) declaracion -> VECTOR tipo NAME [ . NUMBER ]

    NUMBER          shift and go to state 135


state 119

    (15) declaracion -> REGISTRO NAME { atributos . }

    }               shift and go to state 136


state 120

    (30) atributos -> tipo . campos ; atributos
    (31) atributos -> tipo . campos ;
    (32) campos -> . NAME , campos
    (33) campos -> . NAME

    NAME            shift and go to state 138

    campos                         shift and go to state 137

state 121

    (34) def_funcion -> FUNCION NAME ( list_args . ) : tipo { blq_sentencia DEVOLVER blq_sentencia }

    )               shift and go to state 139


state 122

    (36) list_args -> tipo . NAME , list_args
    (37) list_args -> tipo . NAME

    NAME            shift and go to state 140


state 123

    (38) list_args -> empty .

    )               reduce using rule 38 (list_args -> empty .)


state 124

    (75) operando -> NAME [ NUMBER . ]

    ]               shift and go to state 141


state 125

    (44) condicionales -> SI blq_sentencia ENTONCES blq_sentencia . FINSI
    (45) condicionales -> SI blq_sentencia ENTONCES blq_sentencia . SINO blq_sentencia FINSI

    FINSI           shift and go to state 142
    SINO            shift and go to state 143


state 126

    (39) blq_sentencia -> statement SALTO_LINEA blq_sentencia .

    ENTONCES        reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)
    FINMIENTRAS     reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)
    FINSI           reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)
    SINO            reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)
    DEVOLVER        reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)
    }               reduce using rule 39 (blq_sentencia -> statement SALTO_LINEA blq_sentencia .)


state 127

    (46) bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .

    SALTO_LINEA     reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    $end            reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    ENTONCES        reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    FINMIENTRAS     reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    FINSI           reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    SINO            reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    DEVOLVER        reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)
    }               reduce using rule 46 (bucles -> MIENTRAS logico blq_sentencia FINMIENTRAS .)


state 128

    (80) operando -> EXPONENCIAL ( NUMBER ) .

    *               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    /               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    +               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    -               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    IgualIgual      reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    MenorIgual      reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    MayorIgual      reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    Igualdad        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    <               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    >               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    OR              reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    AND             reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    NOT             reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    !               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    &               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    |               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    SALTO_LINEA     reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    $end            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    )               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    ENTONCES        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    NAME            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    VECTOR          reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    REGISTRO        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    FUNCION         reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    SI              reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    MIENTRAS        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    BOOLEANO        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    ENTERO          reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    REAL            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    CARACTER        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    NUMBER          reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    CHAR            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    CIERTO          reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    FALSO           reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    (               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    LONG            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    EXPONENCIAL     reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    LOGARITMICA     reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    SENO            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    COSENO          reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    FINMIENTRAS     reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    FINSI           reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    SINO            reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    DEVOLVER        reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    }               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)
    ,               reduce using rule 80 (operando -> EXPONENCIAL ( NUMBER ) .)


state 129

    (81) operando -> LOGARITMICA ( NUMBER ) .

    *               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    /               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    +               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    -               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    IgualIgual      reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    MenorIgual      reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    MayorIgual      reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    Igualdad        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    <               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    >               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    OR              reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    AND             reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    NOT             reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    !               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    &               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    |               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    SALTO_LINEA     reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    $end            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    )               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    ENTONCES        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    NAME            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    VECTOR          reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    REGISTRO        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    FUNCION         reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    SI              reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    MIENTRAS        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    BOOLEANO        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    ENTERO          reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    REAL            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    CARACTER        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    NUMBER          reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    CHAR            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    CIERTO          reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    FALSO           reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    (               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    LONG            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    EXPONENCIAL     reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    LOGARITMICA     reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    SENO            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    COSENO          reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    FINMIENTRAS     reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    FINSI           reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    SINO            reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    DEVOLVER        reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    }               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)
    ,               reduce using rule 81 (operando -> LOGARITMICA ( NUMBER ) .)


state 130

    (82) operando -> SENO ( NUMBER ) .

    *               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    /               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    +               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    -               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    IgualIgual      reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    MenorIgual      reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    MayorIgual      reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    Igualdad        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    <               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    >               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    OR              reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    AND             reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    NOT             reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    !               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    &               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    |               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    SALTO_LINEA     reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    $end            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    )               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    ENTONCES        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    NAME            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    VECTOR          reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    REGISTRO        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    FUNCION         reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    SI              reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    MIENTRAS        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    BOOLEANO        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    ENTERO          reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    REAL            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    CARACTER        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    NUMBER          reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    CHAR            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    CIERTO          reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    FALSO           reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    (               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    LONG            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    EXPONENCIAL     reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    LOGARITMICA     reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    SENO            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    COSENO          reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    FINMIENTRAS     reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    FINSI           reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    SINO            reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    DEVOLVER        reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    }               reduce using rule 82 (operando -> SENO ( NUMBER ) .)
    ,               reduce using rule 82 (operando -> SENO ( NUMBER ) .)


state 131

    (83) operando -> COSENO ( NUMBER ) .

    *               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    /               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    +               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    -               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    IgualIgual      reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    MenorIgual      reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    MayorIgual      reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    Igualdad        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    <               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    >               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    OR              reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    AND             reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    NOT             reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    !               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    &               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    |               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    SALTO_LINEA     reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    $end            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    )               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    ENTONCES        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    NAME            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    VECTOR          reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    REGISTRO        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    FUNCION         reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    SI              reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    MIENTRAS        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    BOOLEANO        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    ENTERO          reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    REAL            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    CARACTER        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    NUMBER          reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    CHAR            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    CIERTO          reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    FALSO           reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    (               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    LONG            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    EXPONENCIAL     reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    LOGARITMICA     reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    SENO            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    COSENO          reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    FINMIENTRAS     reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    FINSI           reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    SINO            reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    DEVOLVER        reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    }               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)
    ,               reduce using rule 83 (operando -> COSENO ( NUMBER ) .)


state 132

    (27) vectores -> NAME [ NUMBER ] Igualdad . logico
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    NAME            shift and go to state 61
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    logico                         shift and go to state 144
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 133

    (28) registros -> NAME . NAME Igualdad logico .
    (50) logico -> logico . condicion restriccion
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |

    SALTO_LINEA     reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    $end            reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    ENTONCES        reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    FINMIENTRAS     reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    FINSI           reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    SINO            reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    DEVOLVER        reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    }               reduce using rule 28 (registros -> NAME . NAME Igualdad logico .)
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46

    condicion                      shift and go to state 40

state 134

    (41) argumentos -> argumentos , operando .

    )               reduce using rule 41 (argumentos -> argumentos , operando .)
    ,               reduce using rule 41 (argumentos -> argumentos , operando .)


state 135

    (14) declaracion -> VECTOR tipo NAME [ NUMBER . ]

    ]               shift and go to state 145


state 136

    (15) declaracion -> REGISTRO NAME { atributos } .

    SALTO_LINEA     reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    $end            reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    ENTONCES        reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    FINMIENTRAS     reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    FINSI           reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    SINO            reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    DEVOLVER        reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)
    }               reduce using rule 15 (declaracion -> REGISTRO NAME { atributos } .)


state 137

    (30) atributos -> tipo campos . ; atributos
    (31) atributos -> tipo campos . ;

    ;               shift and go to state 146


state 138

    (32) campos -> NAME . , campos
    (33) campos -> NAME .

    ,               shift and go to state 147
    ;               reduce using rule 33 (campos -> NAME .)


state 139

    (34) def_funcion -> FUNCION NAME ( list_args ) . : tipo { blq_sentencia DEVOLVER blq_sentencia }

    :               shift and go to state 148


state 140

    (36) list_args -> tipo NAME . , list_args
    (37) list_args -> tipo NAME .

    ,               shift and go to state 149
    )               reduce using rule 37 (list_args -> tipo NAME .)


state 141

    (75) operando -> NAME [ NUMBER ] .

    *               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    /               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    )               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    +               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    -               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    IgualIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    MenorIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    MayorIgual      reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    Igualdad        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    <               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    >               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    OR              reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    AND             reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    NOT             reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    !               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    &               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    |               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    NAME            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    VECTOR          reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    REGISTRO        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FUNCION         reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SI              reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    MIENTRAS        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    BOOLEANO        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    ENTERO          reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    REAL            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    CARACTER        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    NUMBER          reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    CHAR            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    CIERTO          reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FALSO           reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    (               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    LONG            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    EXPONENCIAL     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    LOGARITMICA     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SENO            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    COSENO          reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FINMIENTRAS     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SALTO_LINEA     reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    $end            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    ENTONCES        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    FINSI           reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    SINO            reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    DEVOLVER        reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    }               reduce using rule 75 (operando -> NAME [ NUMBER ] .)
    ,               reduce using rule 75 (operando -> NAME [ NUMBER ] .)


state 142

    (44) condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .

    SALTO_LINEA     reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    $end            reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    ENTONCES        reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    FINMIENTRAS     reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    FINSI           reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    SINO            reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    DEVOLVER        reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)
    }               reduce using rule 44 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia FINSI .)


state 143

    (45) condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO . blq_sentencia FINSI
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    FINSI           reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    blq_sentencia                  shift and go to state 150
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    tipo                           shift and go to state 12
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 144

    (27) vectores -> NAME [ NUMBER ] Igualdad logico .
    (50) logico -> logico . condicion restriccion
    (58) condicion -> . OR
    (59) condicion -> . AND
    (60) condicion -> . NOT
    (61) condicion -> . !
    (62) condicion -> . &
    (63) condicion -> . |

    SALTO_LINEA     reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    $end            reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    ENTONCES        reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    FINMIENTRAS     reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    FINSI           reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    SINO            reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    DEVOLVER        reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    }               reduce using rule 27 (vectores -> NAME [ NUMBER ] Igualdad logico .)
    OR              shift and go to state 41
    AND             shift and go to state 42
    NOT             shift and go to state 43
    !               shift and go to state 44
    &               shift and go to state 45
    |               shift and go to state 46

    condicion                      shift and go to state 40

state 145

    (14) declaracion -> VECTOR tipo NAME [ NUMBER ] .

    SALTO_LINEA     reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    $end            reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    ENTONCES        reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    FINMIENTRAS     reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    FINSI           reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    SINO            reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    DEVOLVER        reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)
    }               reduce using rule 14 (declaracion -> VECTOR tipo NAME [ NUMBER ] .)


state 146

    (30) atributos -> tipo campos ; . atributos
    (31) atributos -> tipo campos ; .
    (30) atributos -> . tipo campos ; atributos
    (31) atributos -> . tipo campos ;
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME

    }               reduce using rule 31 (atributos -> tipo campos ; .)
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56

    tipo                           shift and go to state 120
    atributos                      shift and go to state 151

state 147

    (32) campos -> NAME , . campos
    (32) campos -> . NAME , campos
    (33) campos -> . NAME

    NAME            shift and go to state 138

    campos                         shift and go to state 152

state 148

    (34) def_funcion -> FUNCION NAME ( list_args ) : . tipo { blq_sentencia DEVOLVER blq_sentencia }
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME

    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56

    tipo                           shift and go to state 153

state 149

    (36) list_args -> tipo NAME , . list_args
    (36) list_args -> . tipo NAME , list_args
    (37) list_args -> . tipo NAME
    (38) list_args -> . empty
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (47) empty -> .

    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    REGISTRO        shift and go to state 57
    VECTOR          shift and go to state 54
    NAME            shift and go to state 56
    )               reduce using rule 47 (empty -> .)

    tipo                           shift and go to state 122
    list_args                      shift and go to state 154
    empty                          shift and go to state 123

state 150

    (45) condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia . FINSI

    FINSI           shift and go to state 155


state 151

    (30) atributos -> tipo campos ; atributos .

    }               reduce using rule 30 (atributos -> tipo campos ; atributos .)


state 152

    (32) campos -> NAME , campos .

    ;               reduce using rule 32 (campos -> NAME , campos .)


state 153

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo . { blq_sentencia DEVOLVER blq_sentencia }

    {               shift and go to state 156


state 154

    (36) list_args -> tipo NAME , list_args .

    )               reduce using rule 36 (list_args -> tipo NAME , list_args .)


state 155

    (45) condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .

    SALTO_LINEA     reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    $end            reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    ENTONCES        reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    FINMIENTRAS     reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    FINSI           reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    SINO            reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    DEVOLVER        reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)
    }               reduce using rule 45 (condicionales -> SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI .)


state 156

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo { . blq_sentencia DEVOLVER blq_sentencia }
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    DEVOLVER        reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    tipo                           shift and go to state 12
    blq_sentencia                  shift and go to state 157
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 157

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia . DEVOLVER blq_sentencia }

    DEVOLVER        shift and go to state 158


state 158

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER . blq_sentencia }
    (39) blq_sentencia -> . statement SALTO_LINEA blq_sentencia
    (40) blq_sentencia -> . statement
    (3) statement -> .
    (4) statement -> . asignacion
    (5) statement -> . declaracion
    (6) statement -> . vectores
    (7) statement -> . registros
    (8) statement -> . def_funcion
    (9) statement -> . uso_funcion
    (10) statement -> . condicionales
    (11) statement -> . bucles
    (12) statement -> . logico
    (16) asignacion -> . tipo NAME Igualdad logico
    (17) asignacion -> . NAME Igualdad logico
    (13) declaracion -> . tipo names
    (14) declaracion -> . VECTOR tipo NAME [ NUMBER ]
    (15) declaracion -> . REGISTRO NAME { atributos }
    (27) vectores -> . NAME [ NUMBER ] Igualdad logico
    (28) registros -> . NAME . NAME Igualdad logico
    (29) registros -> . NAME NAME
    (34) def_funcion -> . FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia }
    (35) uso_funcion -> . NAME ( argumentos )
    (44) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia FINSI
    (45) condicionales -> . SI blq_sentencia ENTONCES blq_sentencia SINO blq_sentencia FINSI
    (46) bucles -> . MIENTRAS logico blq_sentencia FINMIENTRAS
    (50) logico -> . logico condicion restriccion
    (51) logico -> . restriccion
    (20) tipo -> . BOOLEANO
    (21) tipo -> . ENTERO
    (22) tipo -> . REAL
    (23) tipo -> . CARACTER
    (24) tipo -> . REGISTRO
    (25) tipo -> . VECTOR
    (26) tipo -> . NAME
    (48) restriccion -> . restriccion comparador expression
    (49) restriccion -> . expression
    (64) expression -> . multiplicador
    (66) expression -> . expression + multiplicador
    (67) expression -> . expression - multiplicador
    (65) multiplicador -> . operando
    (78) multiplicador -> . multiplicador * operando
    (79) multiplicador -> . multiplicador / operando
    (68) operando -> . NUMBER
    (69) operando -> . CHAR
    (70) operando -> . CIERTO
    (71) operando -> . FALSO
    (72) operando -> . ( expression )
    (73) operando -> . + operando
    (74) operando -> . - operando
    (75) operando -> . NAME [ NUMBER ]
    (76) operando -> . NAME . operando
    (77) operando -> . LONG
    (80) operando -> . EXPONENCIAL ( NUMBER )
    (81) operando -> . LOGARITMICA ( NUMBER )
    (82) operando -> . SENO ( NUMBER )
    (83) operando -> . COSENO ( NUMBER )
    (84) operando -> . NAME

    SALTO_LINEA     reduce using rule 3 (statement -> .)
    }               reduce using rule 3 (statement -> .)
    NAME            shift and go to state 13
    VECTOR          shift and go to state 14
    REGISTRO        shift and go to state 16
    FUNCION         shift and go to state 17
    SI              shift and go to state 19
    MIENTRAS        shift and go to state 20
    BOOLEANO        shift and go to state 22
    ENTERO          shift and go to state 23
    REAL            shift and go to state 24
    CARACTER        shift and go to state 25
    NUMBER          shift and go to state 15
    CHAR            shift and go to state 31
    CIERTO          shift and go to state 32
    FALSO           shift and go to state 33
    (               shift and go to state 18
    +               shift and go to state 28
    -               shift and go to state 29
    LONG            shift and go to state 34
    EXPONENCIAL     shift and go to state 35
    LOGARITMICA     shift and go to state 36
    SENO            shift and go to state 37
    COSENO          shift and go to state 38

    tipo                           shift and go to state 12
    blq_sentencia                  shift and go to state 159
    statement                      shift and go to state 63
    asignacion                     shift and go to state 3
    declaracion                    shift and go to state 4
    vectores                       shift and go to state 5
    registros                      shift and go to state 6
    def_funcion                    shift and go to state 7
    uso_funcion                    shift and go to state 8
    condicionales                  shift and go to state 9
    bucles                         shift and go to state 10
    logico                         shift and go to state 11
    restriccion                    shift and go to state 21
    expression                     shift and go to state 26
    multiplicador                  shift and go to state 27
    operando                       shift and go to state 30

state 159

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia . }

    }               shift and go to state 160


state 160

    (34) def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .

    SALTO_LINEA     reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    $end            reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    ENTONCES        reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    FINMIENTRAS     reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    FINSI           reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    SINO            reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    DEVOLVER        reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)
    }               reduce using rule 34 (def_funcion -> FUNCION NAME ( list_args ) : tipo { blq_sentencia DEVOLVER blq_sentencia } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 26 resolved as shift
WARNING: shift/reduce conflict for - in state 26 resolved as shift
WARNING: shift/reduce conflict for + in state 102 resolved as shift
WARNING: shift/reduce conflict for - in state 102 resolved as shift
